{"ast":null,"code":"import { onMounted, ref } from \"vue\";\nimport { dragscroll } from 'vue-dragscroll';\nexport default {\n  name: 'MindMap',\n  props: {},\n  directives: {\n    dragscroll\n  },\n\n  setup() {\n    const nodes = ref([{\n      \"id\": 1,\n      'text': 'ch1',\n      'url': '',\n      'parent': 0\n    }, {\n      \"id\": 2,\n      'text': 'ch2',\n      'url': '',\n      'parent': 0\n    }, {\n      \"id\": 3,\n      'text': 'ch3',\n      'url': '',\n      'parent': 0\n    }, {\n      \"id\": 4,\n      'text': 'ch4',\n      'url': '',\n      'parent': 1\n    }, {\n      \"id\": 5,\n      'text': 'ch5',\n      'url': '',\n      'parent': 1\n    }, {\n      \"id\": 6,\n      'text': 'ch6',\n      'url': '',\n      'parent': 1\n    }]);\n    const lines = ref([]);\n    let count = 0;\n    const LeaderLine = window.LeaderLine;\n\n    const makeFromParent = (d, el, node_text, rap_node, node_childes, text) => {\n      node_text.classList.add(\"p_nodes\");\n      rap_node.classList.add(\"rap_node\");\n      node_childes.classList.add(\"node_childes\");\n      node_childes.id = `${el[\"id\"]}`;\n      node_text.id = `${\"line\" + el[\"id\"]}`;\n      node_text.appendChild(text);\n      count++;\n      return [rap_node, node_text, node_childes];\n    };\n\n    const makeFromChild = (el, node_text, rap_node, node_childes, text) => {\n      // console.log(\"child\", el[\"parent\"])\n      const parent = document.getElementById(`${el[\"parent\"]}`);\n      node_text.classList.add(\"c_nodes\");\n      rap_node.classList.add(\"rap_node\");\n      node_childes.classList.add(\"node_childes\");\n      node_childes.id = `${el[\"id\"]}`;\n      node_text.id = `${\"line\" + el[\"id\"]}`;\n      node_text.appendChild(text);\n      rap_node.appendChild(node_childes);\n      rap_node.appendChild(node_text);\n      parent.appendChild(rap_node);\n    };\n\n    const makelines = () => {\n      nodes.value.forEach(el => {\n        if (el.parent == 0) {\n          let line = new LeaderLine(document.getElementById('0'), LeaderLine.pointAnchor(document.getElementById(`${\"line\" + el[\"id\"]}`), {\n            x: '20%',\n            y: '50%'\n          })); // line.setOptions({startSocket: 'auto', endSocket: 'auto'});\n\n          line.path = \"magnet\";\n          line.endPlug = \"behind\";\n          lines.value.push(line);\n        } else {\n          let line = new LeaderLine(document.getElementById(`${\"line\" + el[\"parent\"]}`), LeaderLine.pointAnchor(document.getElementById(`${\"line\" + el[\"id\"]}`), {\n            x: '20%',\n            y: '50%'\n          }));\n          line.path = \"magnet\";\n          line.endPlug = \"behind\";\n          lines.value.push(line);\n        }\n      });\n    };\n\n    const removelines = () => {\n      lines.value.forEach(el => {\n        el.remove();\n      });\n      lines.value.length = 0;\n    };\n\n    const line_reset = () => {\n      removelines();\n      makelines();\n    };\n\n    onMounted(() => {\n      console.log(\"mounted\");\n      document.getElementById('0').scrollIntoView({\n        block: 'center',\n        inline: 'center'\n      });\n      const right = document.getElementById(\"right_center\");\n      const left = document.getElementById(\"left_center\");\n      nodes.value.forEach(el => {\n        const node_text = document.createElement(\"div\");\n        const rap_node = document.createElement(\"div\");\n        const node_childes = document.createElement(\"div\");\n        const text = document.createTextNode(el[\"text\"]);\n        node_text.contentEditable = true;\n\n        if (count % 2 == 0) {\n          if (el[\"parent\"] == 0) {\n            let nodeFromParent = makeFromParent(right, el, node_text, rap_node, node_childes, text);\n            nodeFromParent[0].appendChild(nodeFromParent[1]);\n            nodeFromParent[0].appendChild(nodeFromParent[2]);\n            right.appendChild(nodeFromParent[0]);\n          } else {\n            makeFromChild(el, node_text, rap_node, node_childes, text);\n          }\n        } else {\n          if (el[\"parent\"] == 0) {\n            let nodeFromParent = makeFromParent(right, el, node_text, rap_node, node_childes, text);\n            nodeFromParent[0].appendChild(nodeFromParent[2]);\n            nodeFromParent[0].appendChild(nodeFromParent[1]);\n            left.appendChild(nodeFromParent[0]);\n          } else {\n            makeFromChild(el, node_text, rap_node, node_childes, text);\n          }\n        }\n      });\n      makelines();\n    });\n    return {\n      nodes,\n      lines,\n      line_reset\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["onMounted","ref","dragscroll","name","props","directives","setup","nodes","lines","count","LeaderLine","window","makeFromParent","d","el","node_text","rap_node","node_childes","text","classList","add","id","appendChild","makeFromChild","parent","document","getElementById","makelines","value","forEach","line","pointAnchor","x","y","path","endPlug","push","removelines","remove","length","line_reset","console","log","scrollIntoView","block","inline","right","left","createElement","createTextNode","contentEditable","nodeFromParent"],"sourceRoot":"","sources":["C:\\Users\\tnazu\\OneDrive\\ドキュメント\\coding\\vue3\\mindmap\\src\\components\\MindMap.vue"],"sourcesContent":["<template>\n  <div class=\"\">\n    <div class=\"edge\" @scroll=\"line_reset\" v-dragscroll=\"true\">\n      <div class=\"field\" id=\"field\">\n        <!-- <button class=\"btn\" @click=\"click()\">center</button> -->\n        <div class=\"left\">\n          <div class=\"left_vertical\">\n            <div class=\"left_horizontal\" id=\"left_center\">\n              <div></div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"center\">\n          <div class=\"title_node_rap\">\n            <div class=\"title_nodes\" id=\"0\" contenteditable=\"true\" v-on:keydown.tab=\"push_tab($el)\">\n            </div>\n            <!-- {{ nodes[0].text }} -->\n          </div>\n\n        </div>\n\n        <div class=\"right\">\n          <div class=\"right_vertical\">\n            <div class=\"right_horizontal\" id=\"right_center\">\n              <div></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  onMounted,\n  ref,\n\n} from \"vue\"\nimport { dragscroll } from 'vue-dragscroll'\n\nexport default {\n  name: 'MindMap',\n  props: {\n  },\n  directives: {\n    dragscroll\n  },\n  setup() {\n    const nodes = ref([\n      {\n        \"id\": 1,\n        'text': 'ch1',\n        'url': '',\n        'parent': 0,\n      },\n      {\n        \"id\": 2,\n        'text': 'ch2',\n        'url': '',\n        'parent': 0,\n      },\n      {\n        \"id\": 3,\n        'text': 'ch3',\n        'url': '',\n        'parent': 0,\n      },\n      {\n        \"id\": 4,\n        'text': 'ch4',\n        'url': '',\n        'parent': 1,\n      },\n      {\n        \"id\": 5,\n        'text': 'ch5',\n        'url': '',\n        'parent': 1,\n      },\n      {\n        \"id\": 6,\n        'text': 'ch6',\n        'url': '',\n        'parent': 1,\n      },\n    ]);\n    const lines = ref([\n\n    ])\n    let count = 0\n    const LeaderLine = window.LeaderLine;\n\n    const makeFromParent = (d, el, node_text, rap_node, node_childes, text) => {\n      node_text.classList.add(\"p_nodes\");\n      rap_node.classList.add(\"rap_node\");\n      node_childes.classList.add(\"node_childes\");\n      node_childes.id = `${el[\"id\"]}`\n      node_text.id = `${\"line\" + el[\"id\"]}`\n      node_text.appendChild(text)\n\n      count++\n\n      return [rap_node, node_text, node_childes]\n    }\n\n    const makeFromChild = (el, node_text, rap_node, node_childes, text) => {\n      // console.log(\"child\", el[\"parent\"])\n      const parent = document.getElementById(`${el[\"parent\"]}`)\n      node_text.classList.add(\"c_nodes\");\n      rap_node.classList.add(\"rap_node\");\n      node_childes.classList.add(\"node_childes\");\n      node_childes.id = `${el[\"id\"]}`\n      node_text.id = `${\"line\" + el[\"id\"]}`\n      node_text.appendChild(text)\n      rap_node.appendChild(node_childes)\n      rap_node.appendChild(node_text)\n      parent.appendChild(rap_node)\n    }\n\n    const makelines = () => {\n      nodes.value.forEach(el => {\n        if (el.parent == 0) {\n          let line = new LeaderLine(\n            document.getElementById('0'),\n            LeaderLine.pointAnchor(document.getElementById(`${\"line\" + el[\"id\"]}`), { x: '20%', y: '50%' })\n          );\n          // line.setOptions({startSocket: 'auto', endSocket: 'auto'});\n          line.path = \"magnet\"\n          line.endPlug = \"behind\"\n          lines.value.push(line)\n        } else {\n          let line = new LeaderLine(\n            document.getElementById(`${\"line\" + el[\"parent\"]}`),\n            LeaderLine.pointAnchor(document.getElementById(`${\"line\" + el[\"id\"]}`), { x: '20%', y: '50%' })\n          );\n          line.path = \"magnet\"\n          line.endPlug = \"behind\"\n          lines.value.push(line)\n        }\n      })\n    }\n\n    const removelines = () => {\n      lines.value.forEach(el => {\n        el.remove()\n      })\n      lines.value.length = 0\n    }\n\n    const line_reset = () => {\n      removelines()\n      makelines()\n    }\n\n    onMounted(() => {\n      console.log(\"mounted\")\n\n      document.getElementById('0').scrollIntoView({ block: 'center', inline: 'center', })\n\n      const right = document.getElementById(\"right_center\");\n      const left = document.getElementById(\"left_center\");\n\n      nodes.value.forEach(el => {\n        const node_text = document.createElement(\"div\");\n        const rap_node = document.createElement(\"div\");\n        const node_childes = document.createElement(\"div\");\n        const text = document.createTextNode(el[\"text\"]);\n        node_text.contentEditable = true;\n\n        if (count % 2 == 0) {\n          if (el[\"parent\"] == 0) {\n            let nodeFromParent = makeFromParent(right, el, node_text, rap_node, node_childes, text)\n\n            nodeFromParent[0].appendChild(nodeFromParent[1])\n            nodeFromParent[0].appendChild(nodeFromParent[2])\n\n            right.appendChild(nodeFromParent[0])\n          } else {\n            makeFromChild(el, node_text, rap_node, node_childes, text)\n          }\n        } else {\n          if (el[\"parent\"] == 0) {\n            let nodeFromParent = makeFromParent(right, el, node_text, rap_node, node_childes, text)\n\n            nodeFromParent[0].appendChild(nodeFromParent[2])\n            nodeFromParent[0].appendChild(nodeFromParent[1])\n\n            left.appendChild(nodeFromParent[0])\n          } else {\n            makeFromChild(el, node_text, rap_node, node_childes, text)\n          }\n        }\n      });\n      makelines()\n\n    });\n\n    return {\n      nodes,\n      lines,\n      line_reset,\n    };\n\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.btn {\n  z-index: 10000;\n  /* display: flex; */\n}\n\n.edge {\n  width: 800px;\n  height: 800px;\n  overflow: hidden;\n  border: 1px solid #000;\n}\n\n.field {\n  width: 1000px;\n  height: 1000px;\n  z-index: 1000000;\n  display: flex;\n  position: relative;\n}\n\n.center {\n  width: 20%;\n  height: 100%;\n  z-index: 1000000000000;\n  /* background-color: coral; */\n}\n\n.right {\n  width: 40%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.right_vertical {\n  width: 100%;\n  /* background-color: olive; */\n  margin: 0 auto;\n  display: flex;\n  justify-content: flex-start;\n}\n\n.right_horizontal {\n  width: fit-content;\n  /* background-color: orchid; */\n}\n\n.left {\n  width: 40%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.left_vertical {\n  width: 100%;\n  margin: 0 auto;\n  text-align: right;\n  display: flex;\n  justify-content: flex-end;\n  /* background-color: olive; */\n}\n\n.left_horizontal {\n  width: fit-content;\n  /* background-color: orchid; */\n}\n\n.title_nodes {\n  border-radius: 10px;\n  box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5);\n  width: fit-content;\n  font-size: 3vw;\n  font-family: sans-serif;\n  padding: 10px 10px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  background-color: #F5F5F5;\n}\n\n.rap_node {\n  display: flex;\n  margin: 60px 0px;\n  align-items: center;\n  /* background-color: rebeccapurple; */\n}\n\n.p_nodes {\n  background-color: #F5F5F5;\n  border-radius: 10px;\n  box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5);\n  width: fit-content;\n  height: fit-content;\n  font-size: 2vw;\n  padding: 10px 10px;\n  font-family: sans-serif;\n  margin: auto 0;\n}\n\n.c_nodes {\n  background-color: #F5F5F5;\n  border-radius: 10px;\n  box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5);\n  width: fit-content;\n  height: fit-content;\n  font-size: 2vw;\n  padding: 10px 10px;\n  font-family: sans-serif;\n  margin: 60px 60px;\n}\n\n.node_childes {\n  width: 100%;\n  height: 100%;\n  /* background-color: brown; */\n}\n\n#line {\n  position: absolute;\n  left: 100px;\n  top: 100px;\n  width: 200px;\n  height: 1px;\n  background-color: red;\n  transform-origin: left top;\n  transform: skewY(45deg);\n}\n</style>\n  \n"]},"metadata":{},"sourceType":"module"}