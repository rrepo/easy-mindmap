{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div>{{ countRef }}</div>\\n    <div>{{ obj.count }}</div> \"), _createCommentVNode(\" <h2>test</h2> \")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;6DACIA,oFAEFA","names":["_createCommentVNode"],"sourceRoot":"","sources":["C:\\Users\\tnazu\\OneDrive\\ドキュメント\\coding\\vue3\\mindmap\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n    <!-- <div>{{ countRef }}</div>\n    <div>{{ obj.count }}</div> -->\n  <!-- <h2>test</h2> -->\n</template>\n\n<script>\nimport { ref, reactive } from \"vue\";\nimport { onMounted } from \"vue\"\n\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  setup() {\n    const countRef = ref(1);\n    const obj = reactive({\n      count: 2,\n    });\n    const test = ()=> {\n      console.log(\"test\")\n      obj.count = 5\n      countRef.value = 4\n    };\n    onMounted(() => {\n      console.log(\"mounted\")\n      console.log(countRef)\n      console.log(obj)\n      test()\n    });\n    return {\n      countRef,\n      obj,\n    };\n    \n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}