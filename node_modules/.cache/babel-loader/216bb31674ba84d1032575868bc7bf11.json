{"ast":null,"code":"var jsReleases = require('node-releases/data/processed/envs.json');\n\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents;\n\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json');\n\nvar path = require('path');\n\nvar e2c = require('electron-to-chromium/versions');\n\nvar BrowserslistError = require('./error');\n\nvar parse = require('./parse');\n\nvar env = require('./node'); // Will load browser.js in webpack\n\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000;\nvar ANDROID_EVERGREEN_FIRST = 37; // Helpers\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0;\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1);\n  return browserslist.nodeVersions.some(function (i) {\n    return isVersionsMatch(i, version);\n  });\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string';\n  });\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version;\n\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.');\n  }\n\n  return versionToUse;\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version;\n  };\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0]);\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return [];\n  var majorVersions = uniq(released.map(getMajor));\n  var minimum = majorVersions[majorVersions.length - number];\n\n  if (!minimum) {\n    return released;\n  }\n\n  var selected = [];\n\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break;\n    selected.unshift(released[i]);\n  }\n\n  return selected;\n}\n\nfunction uniq(array) {\n  var filtered = [];\n\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i]);\n  }\n\n  return filtered;\n}\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i];\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version);\n\n  if (sign === '>') {\n    return function (v) {\n      return parseFloat(v) > version;\n    };\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseFloat(v) >= version;\n    };\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version;\n    };\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version;\n    };\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt);\n  version[1] = version[1] || 0;\n  version[2] = version[2] || 0;\n\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(v, version) > 0;\n    };\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(v, version) >= 0;\n    };\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(version, v) > 0;\n    };\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(version, v) >= 0;\n    };\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x);\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1;\n  if (a > b) return +1;\n  return 0;\n}\n\nfunction compareSemver(a, b) {\n  return compare(parseInt(a[0]), parseInt(b[0])) || compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) || compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'));\n} // this follows the npm-like semver behavior\n\n\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt);\n\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x';\n  } // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n\n\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt);\n        return compareSemverLoose(version, range) <= 0;\n      };\n\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt);\n        return compareSemverLoose(version, range) >= 0;\n      };\n  }\n} // this follows the npm-like semver behavior\n\n\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1;\n  }\n\n  if (range[1] === 'x') {\n    return 0;\n  }\n\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1;\n  }\n\n  return 0;\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version;\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version];\n  } else {\n    return false;\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version);\n\n  if (resolved) {\n    return resolved;\n  } else if (data.versions.length === 1) {\n    return data.versions[0];\n  } else {\n    return false;\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000;\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context);\n    if (!data) return selected;\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v];\n      return date !== null && date >= since;\n    });\n    return selected.concat(versions.map(nameMapper(data.name)));\n  }, []);\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  };\n}\n\nfunction mapVersions(data, map) {\n  data.versions = data.versions.map(function (i) {\n    return map[i] || i;\n  });\n  data.released = data.released.map(function (i) {\n    return map[i] || i;\n  });\n  var fixedDate = {};\n\n  for (var i in data.releaseDate) {\n    fixedDate[map[i] || i] = data.releaseDate[i];\n  }\n\n  data.releaseDate = fixedDate;\n  return data;\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase();\n  name = browserslist.aliases[name] || name;\n\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]];\n\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop);\n    } else {\n      var cloned = cloneData(desktop);\n      cloned.name = name;\n\n      if (name === 'op_mob') {\n        cloned = mapVersions(cloned, {\n          '10.0-10.1': '10'\n        });\n      }\n\n      return cloned;\n    }\n  }\n\n  return browserslist.data[name];\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var firstEvergreen = ANDROID_EVERGREEN_FIRST;\n  var last = chromeVersions[chromeVersions.length - 1];\n  return androidVersions.filter(function (version) {\n    return /^(?:[2-4]\\.|[34]$)/.test(version);\n  }).concat(chromeVersions.slice(firstEvergreen - last - 1));\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released);\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions);\n  return android;\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context);\n  if (!data) throw new BrowserslistError('Unknown browser ' + name);\n  return data;\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError('Unknown browser query `' + query + '`. ' + 'Maybe you are using old Browserslist or made typo in query.');\n}\n\nfunction filterAndroid(list, versions, context) {\n  if (context.mobileToDesktop) return list;\n  var released = browserslist.data.android.released;\n  var last = released[released.length - 1];\n  var diff = last - ANDROID_EVERGREEN_FIRST - versions;\n\n  if (diff > 0) {\n    return list.slice(-1);\n  } else {\n    return list.slice(diff - 1);\n  }\n}\n\nfunction resolve(queries, context) {\n  return parse(QUERIES, queries).reduce(function (result, node, index) {\n    if (node.not && index === 0) {\n      throw new BrowserslistError('Write any browsers query (for instance, `defaults`) ' + 'before `' + node.query + '`');\n    }\n\n    var type = QUERIES[node.type];\n    var array = type.select.call(browserslist, context, node).map(function (j) {\n      var parts = j.split(' ');\n\n      if (parts[1] === '0') {\n        return parts[0] + ' ' + byName(parts[0], context).versions[0];\n      } else {\n        return j;\n      }\n    });\n\n    if (node.compose === 'and') {\n      if (node.not) {\n        return result.filter(function (j) {\n          return array.indexOf(j) === -1;\n        });\n      } else {\n        return result.filter(function (j) {\n          return array.indexOf(j) !== -1;\n        });\n      }\n    } else {\n      if (node.not) {\n        var filter = {};\n        array.forEach(function (j) {\n          filter[j] = true;\n        });\n        return result.filter(function (j) {\n          return !filter[j];\n        });\n      }\n\n      return result.concat(array);\n    }\n  }, []);\n}\n\nfunction prepareOpts(opts) {\n  if (typeof opts === 'undefined') opts = {};\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.';\n  }\n\n  return opts;\n}\n\nfunction prepareQueries(queries, opts) {\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts);\n\n    if (config) {\n      queries = config;\n    } else {\n      queries = browserslist.defaults;\n    }\n  }\n\n  return queries;\n}\n\nfunction checkQueries(queries) {\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError('Browser queries must be an array or string. Got ' + typeof queries + '.');\n  }\n}\n\nvar cache = {};\n\nfunction browserslist(queries, opts) {\n  opts = prepareOpts(opts);\n  queries = prepareQueries(queries, opts);\n  checkQueries(queries);\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    path: opts.path,\n    env: opts.env\n  };\n  env.oldDataWarning(browserslist.data);\n  var stats = env.getStat(opts, browserslist.data);\n\n  if (stats) {\n    context.customUsage = {};\n\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser]);\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context]);\n  if (cache[cacheKey]) return cache[cacheKey];\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ');\n    name2 = name2.split(' ');\n\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0];\n      var version2 = name2[1].split('-')[0];\n      return compareSemver(version2.split('.'), version1.split('.'));\n    } else {\n      return compare(name1[0], name2[0]);\n    }\n  });\n\n  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result;\n  }\n\n  return result;\n}\n\nbrowserslist.parse = function (queries, opts) {\n  opts = prepareOpts(opts);\n  queries = prepareQueries(queries, opts);\n  checkQueries(queries);\n  return parse(QUERIES, queries);\n}; // Will be filled by Can I Use data below\n\n\nbrowserslist.cache = {};\nbrowserslist.data = {};\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}; // Default browsers query\n\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']; // Browser names aliases\n\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}; // Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\n\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  op_mob: 'opera',\n  android: 'chrome' // has extra processing logic\n\n}; // Aliases to work with joined versions like `ios_saf 7.0-7.1`\n\nbrowserslist.versionAliases = {};\nbrowserslist.clearCaches = env.clearCaches;\nbrowserslist.parseConfig = env.parseConfig;\nbrowserslist.readConfig = env.readConfig;\nbrowserslist.findConfig = env.findConfig;\nbrowserslist.loadConfig = env.loadConfig;\n\nbrowserslist.coverage = function (browsers, stats) {\n  var data;\n\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global;\n  } else if (stats === 'my stats') {\n    var opts = {};\n    opts.path = path.resolve ? path.resolve('.') : '.';\n    var customStats = env.getStat(opts);\n\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided');\n    }\n\n    data = {};\n\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser]);\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase();\n    } else {\n      stats = stats.toUpperCase();\n    }\n\n    env.loadCountry(browserslist.usage, stats, browserslist.data);\n    data = browserslist.usage[stats];\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser;\n    }\n\n    data = {};\n\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version];\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i];\n\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')];\n    }\n\n    return all + (usage || 0);\n  }, 0);\n};\n\nfunction nodeQuery(context, node) {\n  var matched = browserslist.nodeVersions.filter(function (i) {\n    return isVersionsMatch(i, node.version);\n  });\n\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return [];\n    } else {\n      throw new BrowserslistError('Unknown version ' + node.version + ' of Node.js');\n    }\n  }\n\n  return ['node ' + matched[matched.length - 1]];\n}\n\nfunction sinceQuery(context, node) {\n  var year = parseInt(node.year);\n  var month = parseInt(node.month || '01') - 1;\n  var day = parseInt(node.day || '01');\n  return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context);\n}\n\nfunction coverQuery(context, node) {\n  var coverage = parseFloat(node.coverage);\n  var usage = browserslist.usage.global;\n\n  if (node.place) {\n    if (node.place.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided');\n      }\n\n      usage = context.customUsage;\n    } else {\n      var place;\n\n      if (node.place.length === 2) {\n        place = node.place.toUpperCase();\n      } else {\n        place = node.place.toLowerCase();\n      }\n\n      env.loadCountry(browserslist.usage, place, browserslist.data);\n      usage = browserslist.usage[place];\n    }\n  }\n\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a];\n  });\n  var coveraged = 0;\n  var result = [];\n  var version;\n\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i];\n    if (usage[version] === 0) break;\n    coveraged += usage[version];\n    result.push(version);\n    if (coveraged >= coverage) break;\n  }\n\n  return result;\n}\n\nvar QUERIES = {\n  last_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context);\n        if (!data) return selected;\n        var list = getMajorVersions(data.released, node.versions);\n        list = list.map(nameMapper(data.name));\n\n        if (data.name === 'android') {\n          list = filterAndroid(list, node.versions, context);\n        }\n\n        return selected.concat(list);\n      }, []);\n    }\n  },\n  last_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context);\n        if (!data) return selected;\n        var list = data.released.slice(-node.versions);\n        list = list.map(nameMapper(data.name));\n\n        if (data.name === 'android') {\n          list = filterAndroid(list, node.versions, context);\n        }\n\n        return selected.concat(list);\n      }, []);\n    }\n  },\n  last_electron_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var validVersions = getMajorVersions(Object.keys(e2c), node.versions);\n      return validVersions.map(function (i) {\n        return 'chrome ' + e2c[i];\n      });\n    }\n  },\n  last_node_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return getMajorVersions(browserslist.nodeVersions, node.versions).map(function (version) {\n        return 'node ' + version;\n      });\n    }\n  },\n  last_browser_major_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context);\n      var validVersions = getMajorVersions(data.released, node.versions);\n      var list = validVersions.map(nameMapper(data.name));\n\n      if (data.name === 'android') {\n        list = filterAndroid(list, node.versions, context);\n      }\n\n      return list;\n    }\n  },\n  last_electron_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(e2c).slice(-node.versions).map(function (i) {\n        return 'chrome ' + e2c[i];\n      });\n    }\n  },\n  last_node_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+versions?$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions.slice(-node.versions).map(function (version) {\n        return 'node ' + version;\n      });\n    }\n  },\n  last_browser_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context);\n      var list = data.released.slice(-node.versions).map(nameMapper(data.name));\n\n      if (data.name === 'android') {\n        list = filterAndroid(list, node.versions, context);\n      }\n\n      return list;\n    }\n  },\n  unreleased_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+versions$/i,\n    select: function (context) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context);\n        if (!data) return selected;\n        var list = data.versions.filter(function (v) {\n          return data.released.indexOf(v) === -1;\n        });\n        list = list.map(nameMapper(data.name));\n        return selected.concat(list);\n      }, []);\n    }\n  },\n  unreleased_electron_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+electron\\s+versions?$/i,\n    select: function () {\n      return [];\n    }\n  },\n  unreleased_browser_versions: {\n    matches: ['browser'],\n    regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context);\n      return data.versions.filter(function (v) {\n        return data.released.indexOf(v) === -1;\n      }).map(nameMapper(data.name));\n    }\n  },\n  last_years: {\n    matches: ['years'],\n    regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n    select: function (context, node) {\n      return filterByYear(Date.now() - YEAR * node.years, context);\n    }\n  },\n  since_y: {\n    matches: ['year'],\n    regexp: /^since (\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m: {\n    matches: ['year', 'month'],\n    regexp: /^since (\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m_d: {\n    matches: ['year', 'month', 'day'],\n    regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  popularity: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity);\n      var usage = browserslist.usage.global;\n      return Object.keys(usage).reduce(function (result, version) {\n        if (node.sign === '>') {\n          if (usage[version] > popularity) {\n            result.push(version);\n          }\n        } else if (node.sign === '<') {\n          if (usage[version] < popularity) {\n            result.push(version);\n          }\n        } else if (node.sign === '<=') {\n          if (usage[version] <= popularity) {\n            result.push(version);\n          }\n        } else if (usage[version] >= popularity) {\n          result.push(version);\n        }\n\n        return result;\n      }, []);\n    }\n  },\n  popularity_in_my_stats: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity);\n\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided');\n      }\n\n      var usage = context.customUsage;\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version];\n\n        if (percentage == null) {\n          return result;\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version);\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version);\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version);\n          }\n        } else if (percentage >= popularity) {\n          result.push(version);\n        }\n\n        return result;\n      }, []);\n    }\n  },\n  popularity_in_config_stats: {\n    matches: ['sign', 'popularity', 'config'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity);\n      var stats = env.loadStat(context, node.config, browserslist.data);\n\n      if (stats) {\n        context.customUsage = {};\n\n        for (var browser in stats) {\n          fillUsage(context.customUsage, browser, stats[browser]);\n        }\n      }\n\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided');\n      }\n\n      var usage = context.customUsage;\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version];\n\n        if (percentage == null) {\n          return result;\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version);\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version);\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version);\n          }\n        } else if (percentage >= popularity) {\n          result.push(version);\n        }\n\n        return result;\n      }, []);\n    }\n  },\n  popularity_in_place: {\n    matches: ['sign', 'popularity', 'place'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity);\n      var place = node.place;\n\n      if (place.length === 2) {\n        place = place.toUpperCase();\n      } else {\n        place = place.toLowerCase();\n      }\n\n      env.loadCountry(browserslist.usage, place, browserslist.data);\n      var usage = browserslist.usage[place];\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version];\n\n        if (percentage == null) {\n          return result;\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version);\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version);\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version);\n          }\n        } else if (percentage >= popularity) {\n          result.push(version);\n        }\n\n        return result;\n      }, []);\n    }\n  },\n  cover: {\n    matches: ['coverage'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n    select: coverQuery\n  },\n  cover_in: {\n    matches: ['coverage', 'place'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n    select: coverQuery\n  },\n  supports: {\n    matches: ['feature'],\n    regexp: /^supports\\s+([\\w-]+)$/,\n    select: function (context, node) {\n      env.loadFeature(browserslist.cache, node.feature);\n      var features = browserslist.cache[node.feature];\n      return Object.keys(features).reduce(function (result, version) {\n        var flags = features[version];\n\n        if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {\n          result.push(version);\n        }\n\n        return result;\n      }, []);\n    }\n  },\n  electron_range: {\n    matches: ['from', 'to'],\n    regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var fromToUse = normalizeElectron(node.from);\n      var toToUse = normalizeElectron(node.to);\n      var from = parseFloat(node.from);\n      var to = parseFloat(node.to);\n\n      if (!e2c[fromToUse]) {\n        throw new BrowserslistError('Unknown version ' + from + ' of electron');\n      }\n\n      if (!e2c[toToUse]) {\n        throw new BrowserslistError('Unknown version ' + to + ' of electron');\n      }\n\n      return Object.keys(e2c).filter(function (i) {\n        var parsed = parseFloat(i);\n        return parsed >= from && parsed <= to;\n      }).map(function (i) {\n        return 'chrome ' + e2c[i];\n      });\n    }\n  },\n  node_range: {\n    matches: ['from', 'to'],\n    regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions.filter(semverFilterLoose('>=', node.from)).filter(semverFilterLoose('<=', node.to)).map(function (v) {\n        return 'node ' + v;\n      });\n    }\n  },\n  browser_range: {\n    matches: ['browser', 'from', 'to'],\n    regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context);\n      var from = parseFloat(normalizeVersion(data, node.from) || node.from);\n      var to = parseFloat(normalizeVersion(data, node.to) || node.to);\n\n      function filter(v) {\n        var parsed = parseFloat(v);\n        return parsed >= from && parsed <= to;\n      }\n\n      return data.released.filter(filter).map(nameMapper(data.name));\n    }\n  },\n  electron_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version);\n      return Object.keys(e2c).filter(generateFilter(node.sign, versionToUse)).map(function (i) {\n        return 'chrome ' + e2c[i];\n      });\n    }\n  },\n  node_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions.filter(generateSemverFilter(node.sign, node.version)).map(function (v) {\n        return 'node ' + v;\n      });\n    }\n  },\n  browser_ray: {\n    matches: ['browser', 'sign', 'version'],\n    regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n    select: function (context, node) {\n      var version = node.version;\n      var data = checkName(node.browser, context);\n      var alias = browserslist.versionAliases[data.name][version];\n      if (alias) version = alias;\n      return data.released.filter(generateFilter(node.sign, version)).map(function (v) {\n        return data.name + ' ' + v;\n      });\n    }\n  },\n  firefox_esr: {\n    matches: [],\n    regexp: /^(firefox|ff|fx)\\s+esr$/i,\n    select: function () {\n      return ['firefox 91', 'firefox 102'];\n    }\n  },\n  opera_mini_all: {\n    matches: [],\n    regexp: /(operamini|op_mini)\\s+all/i,\n    select: function () {\n      return ['op_mini all'];\n    }\n  },\n  electron_version: {\n    matches: ['version'],\n    regexp: /^electron\\s+([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version);\n      var chrome = e2c[versionToUse];\n\n      if (!chrome) {\n        throw new BrowserslistError('Unknown version ' + node.version + ' of electron');\n      }\n\n      return ['chrome ' + chrome];\n    }\n  },\n  node_major_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+)$/i,\n    select: nodeQuery\n  },\n  node_minor_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  node_patch_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  current_node: {\n    matches: [],\n    regexp: /^current\\s+node$/i,\n    select: function (context) {\n      return [env.currentNode(resolve, context)];\n    }\n  },\n  maintained_node: {\n    matches: [],\n    regexp: /^maintained\\s+node\\s+versions$/i,\n    select: function (context) {\n      var now = Date.now();\n      var queries = Object.keys(jsEOL).filter(function (key) {\n        return now < Date.parse(jsEOL[key].end) && now > Date.parse(jsEOL[key].start) && isEolReleased(key);\n      }).map(function (key) {\n        return 'node ' + key.slice(1);\n      });\n      return resolve(queries, context);\n    }\n  },\n  phantomjs_1_9: {\n    matches: [],\n    regexp: /^phantomjs\\s+1.9$/i,\n    select: function () {\n      return ['safari 5'];\n    }\n  },\n  phantomjs_2_1: {\n    matches: [],\n    regexp: /^phantomjs\\s+2.1$/i,\n    select: function () {\n      return ['safari 6'];\n    }\n  },\n  browser_version: {\n    matches: ['browser', 'version'],\n    regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n    select: function (context, node) {\n      var version = node.version;\n      if (/^tp$/i.test(version)) version = 'TP';\n      var data = checkName(node.browser, context);\n      var alias = normalizeVersion(data, version);\n\n      if (alias) {\n        version = alias;\n      } else {\n        if (version.indexOf('.') === -1) {\n          alias = version + '.0';\n        } else {\n          alias = version.replace(/\\.0$/, '');\n        }\n\n        alias = normalizeVersion(data, alias);\n\n        if (alias) {\n          version = alias;\n        } else if (context.ignoreUnknownVersions) {\n          return [];\n        } else {\n          throw new BrowserslistError('Unknown version ' + version + ' of ' + node.browser);\n        }\n      }\n\n      return [data.name + ' ' + version];\n    }\n  },\n  browserslist_config: {\n    matches: [],\n    regexp: /^browserslist config$/i,\n    select: function (context) {\n      return browserslist(undefined, context);\n    }\n  },\n  extends: {\n    matches: ['config'],\n    regexp: /^extends (.+)$/i,\n    select: function (context, node) {\n      return resolve(env.loadQueries(context, node.config), context);\n    }\n  },\n  defaults: {\n    matches: [],\n    regexp: /^defaults$/i,\n    select: function (context) {\n      return resolve(browserslist.defaults, context);\n    }\n  },\n  dead: {\n    matches: [],\n    regexp: /^dead$/i,\n    select: function (context) {\n      var dead = ['Baidu >= 0', 'ie <= 11', 'ie_mob <= 11', 'bb <= 10', 'op_mob <= 12.1', 'samsung 4'];\n      return resolve(dead, context);\n    }\n  },\n  unknown: {\n    matches: [],\n    regexp: /^(\\w+)$/i,\n    select: function (context, node) {\n      if (byName(node.query, context)) {\n        throw new BrowserslistError('Specify versions in Browserslist query for browser ' + node.query);\n      } else {\n        throw unknownQuery(node.query);\n      }\n    }\n  }\n} // Get and convert Can I Use data\n;\n\n(function () {\n  for (var name in agents) {\n    var browser = agents[name];\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    };\n    fillUsage(browserslist.usage.global, name, browser.usage_global);\n    browserslist.versionAliases[name] = {};\n\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i];\n      if (!full) continue;\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-');\n\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full;\n        }\n      }\n    }\n  }\n\n  browserslist.versionAliases.op_mob['59'] = '58';\n  browserslist.nodeVersions = jsReleases.map(function (release) {\n    return release.version;\n  });\n})();\n\nmodule.exports = browserslist;","map":{"version":3,"names":["jsReleases","require","agents","jsEOL","path","e2c","BrowserslistError","parse","env","YEAR","ANDROID_EVERGREEN_FIRST","isVersionsMatch","versionA","versionB","indexOf","isEolReleased","name","version","slice","browserslist","nodeVersions","some","i","normalize","versions","filter","normalizeElectron","versionToUse","split","length","join","nameMapper","mapName","getMajor","parseInt","getMajorVersions","released","number","majorVersions","uniq","map","minimum","selected","unshift","array","filtered","push","fillUsage","result","data","generateFilter","sign","parseFloat","v","generateSemverFilter","parseSimpleInt","compareSemver","x","compare","a","b","semverFilterLoose","operator","range","compareSemverLoose","resolveVersion","versionAliases","normalizeVersion","resolved","filterByYear","since","context","Object","keys","reduce","byName","releaseDate","date","concat","cloneData","mapVersions","fixedDate","toLowerCase","aliases","mobileToDesktop","desktopNames","desktop","normalizeAndroidData","cloned","normalizeAndroidVersions","androidVersions","chromeVersions","firstEvergreen","last","test","android","chrome","checkName","unknownQuery","query","filterAndroid","list","diff","resolve","queries","QUERIES","node","index","not","type","select","call","j","parts","compose","forEach","prepareOpts","opts","prepareQueries","config","loadConfig","defaults","checkQueries","Array","isArray","cache","ignoreUnknownVersions","dangerousExtend","oldDataWarning","stats","getStat","customUsage","browser","cacheKey","JSON","stringify","sort","name1","name2","version1","version2","process","BROWSERSLIST_DISABLE_CACHE","usage","global","custom","fx","ff","ios","explorer","blackberry","explorermobile","operamini","operamobile","chromeandroid","firefoxandroid","ucandroid","qqandroid","and_chr","and_ff","ie_mob","op_mob","clearCaches","parseConfig","readConfig","findConfig","coverage","browsers","customStats","toUpperCase","loadCountry","dataByBrowser","all","undefined","replace","nodeQuery","matched","sinceQuery","year","month","day","Date","UTC","coverQuery","place","match","coveraged","last_major_versions","matches","regexp","last_versions","last_electron_major_versions","validVersions","last_node_major_versions","last_browser_major_versions","last_electron_versions","last_node_versions","last_browser_versions","unreleased_versions","unreleased_electron_versions","unreleased_browser_versions","last_years","now","years","since_y","since_y_m","since_y_m_d","popularity","popularity_in_my_stats","percentage","popularity_in_config_stats","loadStat","popularity_in_place","cover","cover_in","supports","loadFeature","feature","features","flags","electron_range","fromToUse","from","toToUse","to","parsed","node_range","browser_range","electron_ray","node_ray","browser_ray","alias","firefox_esr","opera_mini_all","electron_version","node_major_version","node_minor_version","node_patch_version","current_node","currentNode","maintained_node","key","end","start","phantomjs_1_9","phantomjs_2_1","browser_version","browserslist_config","extends","loadQueries","dead","unknown","release_date","usage_global","full","interval","release","module","exports"],"sources":["C:/Users/tnazu/OneDrive/ドキュメント/coding/vue3/mindmap/node_modules/browserslist/index.js"],"sourcesContent":["var jsReleases = require('node-releases/data/processed/envs.json')\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json')\nvar path = require('path')\nvar e2c = require('electron-to-chromium/versions')\n\nvar BrowserslistError = require('./error')\nvar parse = require('./parse')\nvar env = require('./node') // Will load browser.js in webpack\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000\nvar ANDROID_EVERGREEN_FIRST = 37\n\n// Helpers\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1)\n  return browserslist.nodeVersions.some(function (i) {\n    return isVersionsMatch(i, version)\n  })\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string'\n  })\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.')\n  }\n  return versionToUse\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version\n  }\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0])\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return []\n  var majorVersions = uniq(released.map(getMajor))\n  var minimum = majorVersions[majorVersions.length - number]\n  if (!minimum) {\n    return released\n  }\n  var selected = []\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break\n    selected.unshift(released[i])\n  }\n  return selected\n}\n\nfunction uniq(array) {\n  var filtered = []\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])\n  }\n  return filtered\n}\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i]\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version)\n  if (sign === '>') {\n    return function (v) {\n      return parseFloat(v) > version\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseFloat(v) >= version\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version\n    }\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version\n    }\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt)\n  version[1] = version[1] || 0\n  version[2] = version[2] || 0\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) > 0\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) >= 0\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) > 0\n    }\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) >= 0\n    }\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x)\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1\n  if (a > b) return +1\n  return 0\n}\n\nfunction compareSemver(a, b) {\n  return (\n    compare(parseInt(a[0]), parseInt(b[0])) ||\n    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||\n    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))\n  )\n}\n\n// this follows the npm-like semver behavior\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt)\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x'\n  }\n  // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) <= 0\n      }\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) >= 0\n      }\n  }\n}\n\n// this follows the npm-like semver behavior\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1\n  }\n  if (range[1] === 'x') {\n    return 0\n  }\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1\n  }\n  return 0\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version]\n  } else {\n    return false\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version)\n  if (resolved) {\n    return resolved\n  } else if (data.versions.length === 1) {\n    return data.versions[0]\n  } else {\n    return false\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context)\n    if (!data) return selected\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v]\n      return date !== null && date >= since\n    })\n    return selected.concat(versions.map(nameMapper(data.name)))\n  }, [])\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  }\n}\n\nfunction mapVersions(data, map) {\n  data.versions = data.versions.map(function (i) {\n    return map[i] || i\n  })\n  data.released = data.released.map(function (i) {\n    return map[i] || i\n  })\n  var fixedDate = {}\n  for (var i in data.releaseDate) {\n    fixedDate[map[i] || i] = data.releaseDate[i]\n  }\n  data.releaseDate = fixedDate\n  return data\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase()\n  name = browserslist.aliases[name] || name\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]]\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)\n    } else {\n      var cloned = cloneData(desktop)\n      cloned.name = name\n      if (name === 'op_mob') {\n        cloned = mapVersions(cloned, { '10.0-10.1': '10' })\n      }\n      return cloned\n    }\n  }\n  return browserslist.data[name]\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var firstEvergreen = ANDROID_EVERGREEN_FIRST\n  var last = chromeVersions[chromeVersions.length - 1]\n  return androidVersions\n    .filter(function (version) {\n      return /^(?:[2-4]\\.|[34]$)/.test(version)\n    })\n    .concat(chromeVersions.slice(firstEvergreen - last - 1))\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released)\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)\n  return android\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context)\n  if (!data) throw new BrowserslistError('Unknown browser ' + name)\n  return data\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError(\n    'Unknown browser query `' +\n      query +\n      '`. ' +\n      'Maybe you are using old Browserslist or made typo in query.'\n  )\n}\n\nfunction filterAndroid(list, versions, context) {\n  if (context.mobileToDesktop) return list\n  var released = browserslist.data.android.released\n  var last = released[released.length - 1]\n  var diff = last - ANDROID_EVERGREEN_FIRST - versions\n  if (diff > 0) {\n    return list.slice(-1)\n  } else {\n    return list.slice(diff - 1)\n  }\n}\n\nfunction resolve(queries, context) {\n  return parse(QUERIES, queries).reduce(function (result, node, index) {\n    if (node.not && index === 0) {\n      throw new BrowserslistError(\n        'Write any browsers query (for instance, `defaults`) ' +\n          'before `' +\n          node.query +\n          '`'\n      )\n    }\n    var type = QUERIES[node.type]\n    var array = type.select.call(browserslist, context, node).map(function (j) {\n      var parts = j.split(' ')\n      if (parts[1] === '0') {\n        return parts[0] + ' ' + byName(parts[0], context).versions[0]\n      } else {\n        return j\n      }\n    })\n\n    if (node.compose === 'and') {\n      if (node.not) {\n        return result.filter(function (j) {\n          return array.indexOf(j) === -1\n        })\n      } else {\n        return result.filter(function (j) {\n          return array.indexOf(j) !== -1\n        })\n      }\n    } else {\n      if (node.not) {\n        var filter = {}\n        array.forEach(function (j) {\n          filter[j] = true\n        })\n        return result.filter(function (j) {\n          return !filter[j]\n        })\n      }\n      return result.concat(array)\n    }\n  }, [])\n}\n\nfunction prepareOpts(opts) {\n  if (typeof opts === 'undefined') opts = {}\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.'\n  }\n\n  return opts\n}\n\nfunction prepareQueries(queries, opts) {\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts)\n    if (config) {\n      queries = config\n    } else {\n      queries = browserslist.defaults\n    }\n  }\n\n  return queries\n}\n\nfunction checkQueries(queries) {\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError(\n      'Browser queries must be an array or string. Got ' + typeof queries + '.'\n    )\n  }\n}\n\nvar cache = {}\n\nfunction browserslist(queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    path: opts.path,\n    env: opts.env\n  }\n\n  env.oldDataWarning(browserslist.data)\n  var stats = env.getStat(opts, browserslist.data)\n  if (stats) {\n    context.customUsage = {}\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser])\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context])\n  if (cache[cacheKey]) return cache[cacheKey]\n\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ')\n    name2 = name2.split(' ')\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0]\n      var version2 = name2[1].split('-')[0]\n      return compareSemver(version2.split('.'), version1.split('.'))\n    } else {\n      return compare(name1[0], name2[0])\n    }\n  })\n  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result\n  }\n  return result\n}\n\nbrowserslist.parse = function (queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n  return parse(QUERIES, queries)\n}\n\n// Will be filled by Can I Use data below\nbrowserslist.cache = {}\nbrowserslist.data = {}\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}\n\n// Default browsers query\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']\n\n// Browser names aliases\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}\n\n// Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  op_mob: 'opera',\n  android: 'chrome' // has extra processing logic\n}\n\n// Aliases to work with joined versions like `ios_saf 7.0-7.1`\nbrowserslist.versionAliases = {}\n\nbrowserslist.clearCaches = env.clearCaches\nbrowserslist.parseConfig = env.parseConfig\nbrowserslist.readConfig = env.readConfig\nbrowserslist.findConfig = env.findConfig\nbrowserslist.loadConfig = env.loadConfig\n\nbrowserslist.coverage = function (browsers, stats) {\n  var data\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global\n  } else if (stats === 'my stats') {\n    var opts = {}\n    opts.path = path.resolve ? path.resolve('.') : '.'\n    var customStats = env.getStat(opts)\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided')\n    }\n    data = {}\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser])\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase()\n    } else {\n      stats = stats.toUpperCase()\n    }\n    env.loadCountry(browserslist.usage, stats, browserslist.data)\n    data = browserslist.usage[stats]\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser\n    }\n    data = {}\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version]\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i]\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')]\n    }\n    return all + (usage || 0)\n  }, 0)\n}\n\nfunction nodeQuery(context, node) {\n  var matched = browserslist.nodeVersions.filter(function (i) {\n    return isVersionsMatch(i, node.version)\n  })\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return []\n    } else {\n      throw new BrowserslistError(\n        'Unknown version ' + node.version + ' of Node.js'\n      )\n    }\n  }\n  return ['node ' + matched[matched.length - 1]]\n}\n\nfunction sinceQuery(context, node) {\n  var year = parseInt(node.year)\n  var month = parseInt(node.month || '01') - 1\n  var day = parseInt(node.day || '01')\n  return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context)\n}\n\nfunction coverQuery(context, node) {\n  var coverage = parseFloat(node.coverage)\n  var usage = browserslist.usage.global\n  if (node.place) {\n    if (node.place.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      usage = context.customUsage\n    } else {\n      var place\n      if (node.place.length === 2) {\n        place = node.place.toUpperCase()\n      } else {\n        place = node.place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      usage = browserslist.usage[place]\n    }\n  }\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a]\n  })\n  var coveraged = 0\n  var result = []\n  var version\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i]\n    if (usage[version] === 0) break\n    coveraged += usage[version]\n    result.push(version)\n    if (coveraged >= coverage) break\n  }\n  return result\n}\n\nvar QUERIES = {\n  last_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = getMajorVersions(data.released, node.versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, node.versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.released.slice(-node.versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, node.versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_electron_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var validVersions = getMajorVersions(Object.keys(e2c), node.versions)\n      return validVersions.map(function (i) {\n        return 'chrome ' + e2c[i]\n      })\n    }\n  },\n  last_node_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return getMajorVersions(browserslist.nodeVersions, node.versions).map(\n        function (version) {\n          return 'node ' + version\n        }\n      )\n    }\n  },\n  last_browser_major_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var validVersions = getMajorVersions(data.released, node.versions)\n      var list = validVersions.map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, node.versions, context)\n      }\n      return list\n    }\n  },\n  last_electron_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(e2c)\n        .slice(-node.versions)\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  last_node_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+versions?$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .slice(-node.versions)\n        .map(function (version) {\n          return 'node ' + version\n        })\n    }\n  },\n  last_browser_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var list = data.released.slice(-node.versions).map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, node.versions, context)\n      }\n      return list\n    }\n  },\n  unreleased_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+versions$/i,\n    select: function (context) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.versions.filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        list = list.map(nameMapper(data.name))\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  unreleased_electron_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+electron\\s+versions?$/i,\n    select: function () {\n      return []\n    }\n  },\n  unreleased_browser_versions: {\n    matches: ['browser'],\n    regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      return data.versions\n        .filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        .map(nameMapper(data.name))\n    }\n  },\n  last_years: {\n    matches: ['years'],\n    regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n    select: function (context, node) {\n      return filterByYear(Date.now() - YEAR * node.years, context)\n    }\n  },\n  since_y: {\n    matches: ['year'],\n    regexp: /^since (\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m: {\n    matches: ['year', 'month'],\n    regexp: /^since (\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m_d: {\n    matches: ['year', 'month', 'day'],\n    regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  popularity: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var usage = browserslist.usage.global\n      return Object.keys(usage).reduce(function (result, version) {\n        if (node.sign === '>') {\n          if (usage[version] > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (usage[version] < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (usage[version] <= popularity) {\n            result.push(version)\n          }\n        } else if (usage[version] >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_my_stats: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_config_stats: {\n    matches: ['sign', 'popularity', 'config'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var stats = env.loadStat(context, node.config, browserslist.data)\n      if (stats) {\n        context.customUsage = {}\n        for (var browser in stats) {\n          fillUsage(context.customUsage, browser, stats[browser])\n        }\n      }\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_place: {\n    matches: ['sign', 'popularity', 'place'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var place = node.place\n      if (place.length === 2) {\n        place = place.toUpperCase()\n      } else {\n        place = place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      var usage = browserslist.usage[place]\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  cover: {\n    matches: ['coverage'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n    select: coverQuery\n  },\n  cover_in: {\n    matches: ['coverage', 'place'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n    select: coverQuery\n  },\n  supports: {\n    matches: ['feature'],\n    regexp: /^supports\\s+([\\w-]+)$/,\n    select: function (context, node) {\n      env.loadFeature(browserslist.cache, node.feature)\n      var features = browserslist.cache[node.feature]\n      return Object.keys(features).reduce(function (result, version) {\n        var flags = features[version]\n        if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  electron_range: {\n    matches: ['from', 'to'],\n    regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var fromToUse = normalizeElectron(node.from)\n      var toToUse = normalizeElectron(node.to)\n      var from = parseFloat(node.from)\n      var to = parseFloat(node.to)\n      if (!e2c[fromToUse]) {\n        throw new BrowserslistError('Unknown version ' + from + ' of electron')\n      }\n      if (!e2c[toToUse]) {\n        throw new BrowserslistError('Unknown version ' + to + ' of electron')\n      }\n      return Object.keys(e2c)\n        .filter(function (i) {\n          var parsed = parseFloat(i)\n          return parsed >= from && parsed <= to\n        })\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_range: {\n    matches: ['from', 'to'],\n    regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(semverFilterLoose('>=', node.from))\n        .filter(semverFilterLoose('<=', node.to))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_range: {\n    matches: ['browser', 'from', 'to'],\n    regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var from = parseFloat(normalizeVersion(data, node.from) || node.from)\n      var to = parseFloat(normalizeVersion(data, node.to) || node.to)\n      function filter(v) {\n        var parsed = parseFloat(v)\n        return parsed >= from && parsed <= to\n      }\n      return data.released.filter(filter).map(nameMapper(data.name))\n    }\n  },\n  electron_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      return Object.keys(e2c)\n        .filter(generateFilter(node.sign, versionToUse))\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(generateSemverFilter(node.sign, node.version))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_ray: {\n    matches: ['browser', 'sign', 'version'],\n    regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n    select: function (context, node) {\n      var version = node.version\n      var data = checkName(node.browser, context)\n      var alias = browserslist.versionAliases[data.name][version]\n      if (alias) version = alias\n      return data.released\n        .filter(generateFilter(node.sign, version))\n        .map(function (v) {\n          return data.name + ' ' + v\n        })\n    }\n  },\n  firefox_esr: {\n    matches: [],\n    regexp: /^(firefox|ff|fx)\\s+esr$/i,\n    select: function () {\n      return ['firefox 91', 'firefox 102']\n    }\n  },\n  opera_mini_all: {\n    matches: [],\n    regexp: /(operamini|op_mini)\\s+all/i,\n    select: function () {\n      return ['op_mini all']\n    }\n  },\n  electron_version: {\n    matches: ['version'],\n    regexp: /^electron\\s+([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      var chrome = e2c[versionToUse]\n      if (!chrome) {\n        throw new BrowserslistError(\n          'Unknown version ' + node.version + ' of electron'\n        )\n      }\n      return ['chrome ' + chrome]\n    }\n  },\n  node_major_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+)$/i,\n    select: nodeQuery\n  },\n  node_minor_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  node_patch_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  current_node: {\n    matches: [],\n    regexp: /^current\\s+node$/i,\n    select: function (context) {\n      return [env.currentNode(resolve, context)]\n    }\n  },\n  maintained_node: {\n    matches: [],\n    regexp: /^maintained\\s+node\\s+versions$/i,\n    select: function (context) {\n      var now = Date.now()\n      var queries = Object.keys(jsEOL)\n        .filter(function (key) {\n          return (\n            now < Date.parse(jsEOL[key].end) &&\n            now > Date.parse(jsEOL[key].start) &&\n            isEolReleased(key)\n          )\n        })\n        .map(function (key) {\n          return 'node ' + key.slice(1)\n        })\n      return resolve(queries, context)\n    }\n  },\n  phantomjs_1_9: {\n    matches: [],\n    regexp: /^phantomjs\\s+1.9$/i,\n    select: function () {\n      return ['safari 5']\n    }\n  },\n  phantomjs_2_1: {\n    matches: [],\n    regexp: /^phantomjs\\s+2.1$/i,\n    select: function () {\n      return ['safari 6']\n    }\n  },\n  browser_version: {\n    matches: ['browser', 'version'],\n    regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n    select: function (context, node) {\n      var version = node.version\n      if (/^tp$/i.test(version)) version = 'TP'\n      var data = checkName(node.browser, context)\n      var alias = normalizeVersion(data, version)\n      if (alias) {\n        version = alias\n      } else {\n        if (version.indexOf('.') === -1) {\n          alias = version + '.0'\n        } else {\n          alias = version.replace(/\\.0$/, '')\n        }\n        alias = normalizeVersion(data, alias)\n        if (alias) {\n          version = alias\n        } else if (context.ignoreUnknownVersions) {\n          return []\n        } else {\n          throw new BrowserslistError(\n            'Unknown version ' + version + ' of ' + node.browser\n          )\n        }\n      }\n      return [data.name + ' ' + version]\n    }\n  },\n  browserslist_config: {\n    matches: [],\n    regexp: /^browserslist config$/i,\n    select: function (context) {\n      return browserslist(undefined, context)\n    }\n  },\n  extends: {\n    matches: ['config'],\n    regexp: /^extends (.+)$/i,\n    select: function (context, node) {\n      return resolve(env.loadQueries(context, node.config), context)\n    }\n  },\n  defaults: {\n    matches: [],\n    regexp: /^defaults$/i,\n    select: function (context) {\n      return resolve(browserslist.defaults, context)\n    }\n  },\n  dead: {\n    matches: [],\n    regexp: /^dead$/i,\n    select: function (context) {\n      var dead = [\n        'Baidu >= 0',\n        'ie <= 11',\n        'ie_mob <= 11',\n        'bb <= 10',\n        'op_mob <= 12.1',\n        'samsung 4'\n      ]\n      return resolve(dead, context)\n    }\n  },\n  unknown: {\n    matches: [],\n    regexp: /^(\\w+)$/i,\n    select: function (context, node) {\n      if (byName(node.query, context)) {\n        throw new BrowserslistError(\n          'Specify versions in Browserslist query for browser ' + node.query\n        )\n      } else {\n        throw unknownQuery(node.query)\n      }\n    }\n  }\n}\n\n// Get and convert Can I Use data\n\n;(function () {\n  for (var name in agents) {\n    var browser = agents[name]\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    }\n    fillUsage(browserslist.usage.global, name, browser.usage_global)\n\n    browserslist.versionAliases[name] = {}\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i]\n      if (!full) continue\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-')\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full\n        }\n      }\n    }\n  }\n\n  browserslist.versionAliases.op_mob['59'] = '58'\n\n  browserslist.nodeVersions = jsReleases.map(function (release) {\n    return release.version\n  })\n})()\n\nmodule.exports = browserslist\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}