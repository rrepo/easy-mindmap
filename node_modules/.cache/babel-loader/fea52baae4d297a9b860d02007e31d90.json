{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <div>{{ countRef }}</div>\\n    <div>{{ obj.count }}</div> \"), _createCommentVNode(\" <div id=\\\"start\\\">start</div>\\n    <div id=\\\"end\\\">end</div> \")]);\n}","map":{"version":3,"mappings":";;uBACEA,oBAKM,KALN,EAKM,IALN,EAKM,CAJJC,kFAII,EAFJA,qFAEI,CALN","names":["_createElementBlock","_createCommentVNode"],"sourceRoot":"","sources":["C:\\Users\\tnazu\\OneDrive\\ドキュメント\\coding\\vue3\\mindmap\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <div>{{ countRef }}</div>\n    <div>{{ obj.count }}</div> -->\n    <!-- <div id=\"start\">start</div>\n    <div id=\"end\">end</div> -->\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from \"vue\";\nimport { onMounted } from \"vue\"\n\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  setup() {\n    const countRef = ref(1);\n    const obj = reactive({\n      count: 2,\n    });\n    const test = () => {\n      console.log(\"test\")\n      obj.count = 5\n      countRef.value = 4\n    };\n    onMounted(() => {\n      // const LeaderLine = window.LeaderLine;\n      // new LeaderLine(\n      //   document.getElementById('start'),\n      //   document.getElementById('end')\n      // );\n\n\n      // console.log(\"mounted\")\n      // console.log(countRef)\n      // console.log(obj)\n      test()\n    });\n    return {\n      countRef,\n      obj,\n    };\n\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}