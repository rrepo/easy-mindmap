{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createElementBlock as _createElementBlock, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"\"\n};\nconst _hoisted_2 = {\n  class: \"field\",\n  id: \"field\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_vertical\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_horizontal\",\n  id: \"left_center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\")])])], -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"center\"\n};\nconst _hoisted_5 = {\n  class: \"title_node_rap\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"right\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"right_vertical\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"right_horizontal\",\n  id: \"right_center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\")])])], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_dragscroll = _resolveDirective(\"dragscroll\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives((_openBlock(), _createElementBlock(\"div\", {\n    class: \"edge\",\n    onScroll: _cache[1] || (_cache[1] = (...args) => $setup.line_reset && $setup.line_reset(...args))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" <button class=\\\"btn\\\" @click=\\\"click()\\\">center</button> \"), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", {\n    class: \"title_nodes\",\n    id: \"0\",\n    contenteditable: \"true\",\n    \"on:keydown\": _cache[0] || (_cache[0] = $event => $setup.input_title($event))\n  }, [_createCommentVNode(\" @:keydown.tab=\\\"push_tab($el)\\\" \"), _createTextVNode(_toDisplayString($setup.title), 1\n  /* TEXT */\n  )], 32\n  /* HYDRATE_EVENTS */\n  )])]), _hoisted_6])], 32\n  /* HYDRATE_EVENTS */\n  )), [[_directive_dragscroll, true]])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EAEFA,KAAK,EAAC;EAAQC,EAAE,EAAC;;;gCAEpBC,oBAMM,KANN,EAMM;EANDF,KAAK,EAAC;AAML,CANN,EAAiB,cACfE,oBAIM,KAJN,EAIM;EAJDF,KAAK,EAAC;AAIL,CAJN,EAA0B,cACxBE,oBAEM,KAFN,EAEM;EAFDF,KAAK,EAAC,iBAEL;EAFuBC,EAAE,EAAC;AAE1B,CAFN,gBACEC,oBAAW,KAAX,EADF,CADwB,CAA1B,CADe,CAAjB;;AAAA;;;EAQKF,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;gCASbE,oBAMM,KANN,EAMM;EANDF,KAAK,EAAC;AAML,CANN,EAAkB,cAChBE,oBAIM,KAJN,EAIM;EAJDF,KAAK,EAAC;AAIL,CAJN,EAA2B,cACzBE,oBAEM,KAFN,EAEM;EAFDF,KAAK,EAAC,kBAEL;EAFwBC,EAAE,EAAC;AAE3B,CAFN,gBACEC,oBAAW,KAAX,EADF,CADyB,CAA3B,CADgB,CAAlB;;AAAA;;;;;uBAtBNC,oBA+BM,KA/BN,cA+BM,gCA9BJA,oBA6BM,KA7BN,EA6BM;IA7BDH,KAAK,EAAC,MA6BL;IA7BaI,QAAM,yCAAEC,+CAAF;EA6BnB,CA7BN,GACEH,oBA2BM,KA3BN,cA2BM,CA1BJI,iFA0BI,EAzBJC,UAyBI,EAjBJL,oBAQM,KARN,cAQM,CAPJA,oBAKM,KALN,cAKM,CAJJA,oBAGM,KAHN,EAGM;IAHDF,KAAK,EAAC,aAGL;IAHmBC,EAAE,EAAC,GAGtB;IAH0BO,eAAe,EAAC,MAG1C;IAHkD,cAAQC,oCAAEJ,mBAAYK,MAAZ,CAAF;EAG1D,CAHN,GACEJ,4FACGD,eAAK;EAAA;IAFV;;EAAA,CAII,CALN,CAOI,CARN,CAiBI,EAPJM,UAOI,CA3BN,EADF;;EAAA,6BAAqD,OA8BjD,CA/BN","names":["class","id","_createElementVNode","_createElementBlock","onScroll","$setup","_createCommentVNode","_hoisted_3","contenteditable","_cache","$event","_hoisted_6"],"sourceRoot":"","sources":["C:\\Users\\tnazu\\OneDrive\\ドキュメント\\coding\\vue3\\mindmap\\src\\components\\MindMap.vue"],"sourcesContent":["<template>\r\n  <div class=\"\">\r\n    <div class=\"edge\" @scroll=\"line_reset\" v-dragscroll=\"true\">\r\n      <div class=\"field\" id=\"field\">\r\n        <!-- <button class=\"btn\" @click=\"click()\">center</button> -->\r\n        <div class=\"left\">\r\n          <div class=\"left_vertical\">\r\n            <div class=\"left_horizontal\" id=\"left_center\">\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"center\">\r\n          <div class=\"title_node_rap\">\r\n            <div class=\"title_nodes\" id=\"0\" contenteditable=\"true\" @:keydown=\"input_title($event)\">\r\n              <!-- @:keydown.tab=\"push_tab($el)\" -->\r\n              {{ title }}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"right\">\r\n          <div class=\"right_vertical\">\r\n            <div class=\"right_horizontal\" id=\"right_center\">\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  onMounted,\r\n  ref,\r\n\r\n} from \"vue\"\r\nimport { dragscroll } from 'vue-dragscroll'\r\n\r\nexport default {\r\n  name: 'MindMap',\r\n  props: {\r\n  },\r\n  directives: {\r\n    dragscroll\r\n  },\r\n  setup() {\r\n    let title = ref(\"title\")\r\n    let nodes = ref([\r\n      {\r\n        \"id\": 1,\r\n        'text': 'ch1',\r\n        'url': '',\r\n        'parent': 0,\r\n        'direction':''\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        'text': 'ch2',\r\n        'url': '',\r\n        'parent': 0,\r\n        'direction':''\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        'text': 'ch3',\r\n        'url': '',\r\n        'parent': 1,\r\n        'direction':''\r\n      },\r\n      {\r\n        \"id\": 4,\r\n        'text': 'ch4',\r\n        'url': '',\r\n        'parent': 1,\r\n        'direction':''\r\n      },\r\n      {\r\n        \"id\": 5,\r\n        'text': 'ch5',\r\n        'url': '',\r\n        'parent': 2,\r\n        'direction':''\r\n      },\r\n      {\r\n        \"id\": 6,\r\n        'text': 'ch6',\r\n        'url': '',\r\n        'parent': 2,\r\n        'direction':''\r\n      },\r\n      {\r\n        \"id\": 7,\r\n        'text': 'ch7',\r\n        'url': '',\r\n        'parent': 0,\r\n        'direction':''\r\n      },\r\n      {\r\n        \"id\": 8,\r\n        'text': 'ch8',\r\n        'url': '',\r\n        'parent': 0,\r\n        'direction':''\r\n      },\r\n    ]);\r\n    let lines = ref([\r\n\r\n    ])\r\n    let count = 0\r\n    const LeaderLine = window.LeaderLine;\r\n\r\n    // 9/27 fix input and move node\r\n\r\n    const makeFromParent = (d, el, node_text, rap_node, node_childes, text) => {\r\n      node_text.classList.add(\"p_nodes\");\r\n      rap_node.classList.add(\"rap_node\");\r\n      node_childes.classList.add(\"node_childes\");\r\n      node_childes.id = `${el[\"id\"]}`\r\n      node_text.id = `${\"node\" + el[\"id\"]}`\r\n      node_text.appendChild(text)\r\n\r\n      count++\r\n\r\n      return [rap_node, node_text, node_childes]\r\n    }\r\n\r\n    const makeFromChild = (el, node_text, rap_node, node_childes, text) => {\r\n      // console.log(\"child\", el)\r\n      const parent = document.getElementById(`${el[\"parent\"]}`)\r\n\r\n      console.log(parent)\r\n\r\n      node_text.classList.add(\"c_nodes\");\r\n      rap_node.classList.add(\"rap_node\");\r\n      node_childes.id = `${el[\"id\"]}`\r\n      node_text.id = `${\"node\" + el[\"id\"]}`\r\n      node_childes.classList.add(\"node_childes\");\r\n      node_text.appendChild(text)\r\n      rap_node.appendChild(node_childes)\r\n      rap_node.appendChild(node_text)\r\n      parent.appendChild(rap_node)\r\n      return node_childes\r\n    }\r\n\r\n    const makelines = () => {\r\n      nodes.value.forEach(el => {\r\n        if (el.parent == 0) {\r\n          let line = new LeaderLine(\r\n            document.getElementById('0'),\r\n            LeaderLine.pointAnchor(document.getElementById(`${\"node\" + el[\"id\"]}`), { x: '20%', y: '50%' })\r\n          );\r\n          // line.setOptions({startSocket: 'auto', endSocket: 'auto'});\r\n          line.path = \"magnet\"\r\n          line.endPlug = \"behind\"\r\n          lines.value.push(line)\r\n        } else {\r\n          let line = new LeaderLine(\r\n            document.getElementById(`${\"node\" + el[\"parent\"]}`),\r\n            LeaderLine.pointAnchor(document.getElementById(`${\"node\" + el[\"id\"]}`), { x: '20%', y: '50%' })\r\n          );\r\n          line.path = \"magnet\"\r\n          line.endPlug = \"behind\"\r\n          lines.value.push(line)\r\n        }\r\n      })\r\n    }\r\n\r\n    const removelines = () => {\r\n      lines.value.forEach(el => {\r\n        el.remove()\r\n      })\r\n      lines.value.length = 0\r\n    }\r\n\r\n    const line_reset = () => {\r\n      removelines()\r\n      makelines()\r\n    }\r\n\r\n    const input_title = (e) => {\r\n      // console.log(e.srcElement.innerText)\r\n      title.value = e.srcElement.innerText\r\n      console.log(title)\r\n      line_reset()\r\n    }\r\n\r\n    const keydown_node = (e) => {\r\n      // console.log(e)\r\n      e\r\n      // console.log(e.srcElement.innerText)\r\n      // console.log('before',e.target.offsetWidth)\r\n      // 横幅を動的に変更する\r\n      line_reset()\r\n    }\r\n\r\n    const keyup_node = (e) => {\r\n      // console.log('after',e.target.offsetWidth)\r\n      let id = Number(e.srcElement.id.replace(\"node\", \"\"))\r\n      // console.log(e.srcElement.innerText)\r\n      // console.log(nodes.value[id - 1].text)\r\n      nodes.value[id - 1].text = e.srcElement.innerText\r\n\r\n      console.log()\r\n\r\n      line_reset()\r\n    }\r\n\r\n    onMounted(() => {\r\n      console.log(\"mounted\")\r\n\r\n      document.getElementById('0').scrollIntoView({ block: 'center', inline: 'center', })\r\n\r\n      const right = document.getElementById(\"right_center\");\r\n      const left = document.getElementById(\"left_center\");\r\n\r\n      nodes.value.forEach(el => {\r\n        const node_text = document.createElement(\"div\");\r\n        const rap_node = document.createElement(\"div\");\r\n        const node_childes = document.createElement(\"div\");\r\n        const text = document.createTextNode(el[\"text\"]);\r\n        node_text.contentEditable = true;\r\n\r\n        if (el[\"parent\"] == 0) {\r\n          console.log()\r\n          if (count % 2 == 0) {\r\n            let nodeFromParent = makeFromParent(right, el, node_text, rap_node, node_childes, text)\r\n\r\n            nodeFromParent[0].appendChild(nodeFromParent[1])\r\n            nodeFromParent[0].appendChild(nodeFromParent[2])\r\n\r\n            right.appendChild(nodeFromParent[0])\r\n            console.log('el',el.direction)\r\n            el.direction = 'right'\r\n          } else {\r\n            let nodeFromParent = makeFromParent(right, el, node_text, rap_node, node_childes, text)\r\n\r\n            nodeFromParent[0].appendChild(nodeFromParent[2])\r\n            nodeFromParent[0].appendChild(nodeFromParent[1])\r\n\r\n            left.appendChild(nodeFromParent[0])\r\n            node_childes.classList.add(\"margin-auto\")\r\n            el.direction = 'left'\r\n          }\r\n        } else {\r\n          let child_node = makeFromChild(el, node_text, rap_node, node_childes, text)\r\n  \r\n          console.log(\"child_node!!!!!!!!!!\", el)\r\n\r\n          console.log(nodes.value[el.parent - 1].direction)\r\n          el.direction = nodes.value[el.parent - 1].direction\r\n          if(el.direction == 'right'){\r\n            child_node.classList.add(\"right_node_childes\")\r\n          }else{\r\n            child_node.classList.add(\"left_node_childes\")\r\n          }\r\n        }\r\n\r\n        // console.log(nodes.value)\r\n\r\n        // if (count % 2 == 0) {\r\n        //   if (el[\"parent\"] == 0) {\r\n        //     let nodeFromParent = makeFromParent(right, el, node_text, rap_node, node_childes, text)\r\n\r\n        //     nodeFromParent[0].appendChild(nodeFromParent[1])\r\n        //     nodeFromParent[0].appendChild(nodeFromParent[2])\r\n\r\n        //     right.appendChild(nodeFromParent[0])\r\n        //   } else {\r\n        //     let child_node = makeFromChild(el, node_text, rap_node, node_childes, text)\r\n        //     child_node.classList.add(\"node_childes\")\r\n        //     console.log(\"child_node!!!!!!!!!!\", child_node)\r\n        //   }\r\n        // } else {\r\n        //   if (el[\"parent\"] == 0) {\r\n        //     let nodeFromParent = makeFromParent(right, el, node_text, rap_node, node_childes, text)\r\n\r\n        //     nodeFromParent[0].appendChild(nodeFromParent[2])\r\n        //     nodeFromParent[0].appendChild(nodeFromParent[1])\r\n\r\n        //     left.appendChild(nodeFromParent[0])\r\n        //     console.log(el)\r\n        //     node_childes.classList.add(\"margin-auto\")\r\n        //   } else {\r\n        //     let child_node = makeFromChild(el, node_text, rap_node, node_childes, text)\r\n        //     console.log(\"child_node\", child_node)\r\n        //     child_node.classList.add(\"node_childes\")\r\n        //     // child_node.classList.add(\"node_childes\")\r\n        //     // child_node.classList.add(\"margin-auto\")\r\n        //   }\r\n        // }\r\n\r\n        document.getElementById(`${'node' + el['id']}`).addEventListener('keydown', keydown_node);\r\n        document.getElementById(`${'node' + el['id']}`).addEventListener('keyup', keyup_node);\r\n      });\r\n\r\n      makelines()\r\n    });\r\n\r\n    return {\r\n      title,\r\n      nodes,\r\n      lines,\r\n      line_reset,\r\n      input_title,\r\n      keydown_node,\r\n      keyup_node\r\n    };\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style>\r\n.btn {\r\n  z-index: 10000;\r\n  /* display: flex; */\r\n}\r\n\r\n.edge {\r\n  width: 900px;\r\n  height: 900px;\r\n  overflow: hidden;\r\n  border: 1px solid #000;\r\n}\r\n\r\n.field {\r\n  width: 1500px;\r\n  height: 1500px;\r\n  z-index: 1000000;\r\n  display: flex;\r\n  position: relative;\r\n}\r\n\r\n.center {\r\n  width: 30%;\r\n  height: 100%;\r\n  z-index: 1000000000000;\r\n  /* background-color: coral; */\r\n}\r\n\r\n.right {\r\n  width: 35%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.right_vertical {\r\n  width: 100%;\r\n  /* background-color: olive; */\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.right_horizontal {\r\n  width: fit-content;\r\n  /* background-color: orchid; */\r\n}\r\n\r\n.left {\r\n  width: 35%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.left_vertical {\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  text-align: left;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  /* background-color: olive; */\r\n}\r\n\r\n.left_horizontal {\r\n  width: fit-content;\r\n  /* background-color: orchid; */\r\n}\r\n\r\n.title_node_rap {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: auto;\r\n}\r\n\r\n.title_nodes {\r\n  border-radius: 10px;\r\n  box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5);\r\n  width: fit-content;\r\n  font-size: 35px;\r\n  font-family: sans-serif;\r\n  padding: 10px 10px;\r\n  background-color: #F5F5F5;\r\n  max-width: 200px;\r\n}\r\n\r\n.rap_node {\r\n  display: flex;\r\n  margin: 60px 0px;\r\n  align-items: center;\r\n  /* background-color: rebeccapurple; */\r\n}\r\n\r\n.p_nodes {\r\n  background-color: #F5F5F5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5);\r\n  /* width: fit-content;\r\n  height: fit-content; */\r\n  width: -moz-fit-content;\r\n  /* Firefox */\r\n  width: fit-content;\r\n  /* other browsers */\r\n  font-size: 23px;\r\n  padding: 10px 10px;\r\n  font-family: sans-serif;\r\n  margin: auto 0;\r\n}\r\n\r\n.c_nodes {\r\n  background-color: #F5F5F5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5);\r\n  /* width: fit-content;\r\n  height: fit-content; */\r\n  width: -moz-fit-content;\r\n  /* Firefox */\r\n  width: fit-content;\r\n  /* other browsers */\r\n  font-size: 23px;\r\n  padding: 10px 10px;\r\n  font-family: sans-serif;\r\n  margin: 60px 60px;\r\n}\r\n\r\n.right_node_childes {\r\n  width: 100%;\r\n  height: 100%;\r\n  /* background-color: brown; */\r\n  width: -moz-fit-content;\r\n  /* Firefox */\r\n  width: fit-content;\r\n  /* other browsers */\r\n}\r\n\r\n.left_node_childes {\r\n  width: 100%;\r\n  height: 100%;\r\n  width: -moz-fit-content;\r\n  width: fit-content;\r\n  margin-right: auto;\r\n}\r\n\r\n.margin-auto {\r\n  margin: auto;\r\n}\r\n\r\n#line {\r\n  position: absolute;\r\n  left: 100px;\r\n  top: 100px;\r\n  width: 200px;\r\n  height: 1px;\r\n  background-color: red;\r\n  transform-origin: left top;\r\n  transform: skewY(45deg);\r\n}\r\n</style>\r\n  \r\n"]},"metadata":{},"sourceType":"module"}