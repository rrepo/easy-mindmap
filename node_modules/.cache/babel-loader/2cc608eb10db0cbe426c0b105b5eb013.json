{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createElementBlock as _createElementBlock, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"\"\n};\nconst _hoisted_2 = {\n  class: \"field\",\n  id: \"field\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_vertical\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_horizontal\",\n  id: \"left_center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\")])])], -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"center\"\n};\nconst _hoisted_5 = {\n  class: \"title_node_rap\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"right\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"right_vertical\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"right_horizontal\",\n  id: \"right_center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\")])])], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_dragscroll = _resolveDirective(\"dragscroll\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives((_openBlock(), _createElementBlock(\"div\", {\n    class: \"edge\",\n    onScroll: _cache[2] || (_cache[2] = (...args) => $setup.line_reset && $setup.line_reset(...args))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" <button class=\\\"btn\\\" @click=\\\"click()\\\">center</button> \"), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", {\n    class: \"title_selector\",\n    \"on:click\": _cache[1] || (_cache[1] = $event => $setup.dbclick_title_selector($event))\n  }, [_createElementVNode(\"div\", {\n    class: \"title_nodes\",\n    id: \"title\",\n    contenteditable: \"true\",\n    \"on:keydown\": _cache[0] || (_cache[0] = $event => _ctx.input_title($event))\n  }, [_createCommentVNode(\" @:keydown.tab=\\\"push_tab($el)\\\" \"), _createTextVNode(_toDisplayString($setup.title), 1\n  /* TEXT */\n  )], 32\n  /* HYDRATE_EVENTS */\n  )], 32\n  /* HYDRATE_EVENTS */\n  )])]), _hoisted_6])], 32\n  /* HYDRATE_EVENTS */\n  )), [[_directive_dragscroll, true]])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EAEFA,KAAK,EAAC;EAAQC,EAAE,EAAC;;;gCAEpBC,oBAMM,KANN,EAMM;EANDF,KAAK,EAAC;AAML,CANN,EAAiB,cACfE,oBAIM,KAJN,EAIM;EAJDF,KAAK,EAAC;AAIL,CAJN,EAA0B,cACxBE,oBAEM,KAFN,EAEM;EAFDF,KAAK,EAAC,iBAEL;EAFuBC,EAAE,EAAC;AAE1B,CAFN,gBACEC,oBAAW,KAAX,EADF,CADwB,CAA1B,CADe,CAAjB;;AAAA;;;EAQKF,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;gCAYbE,oBAMM,KANN,EAMM;EANDF,KAAK,EAAC;AAML,CANN,EAAkB,cAChBE,oBAIM,KAJN,EAIM;EAJDF,KAAK,EAAC;AAIL,CAJN,EAA2B,cACzBE,oBAEM,KAFN,EAEM;EAFDF,KAAK,EAAC,kBAEL;EAFwBC,EAAE,EAAC;AAE3B,CAFN,gBACEC,oBAAW,KAAX,EADF,CADyB,CAA3B,CADgB,CAAlB;;AAAA;;;;;uBAzBNC,oBAkCM,KAlCN,cAkCM,gCAjCJA,oBAgCM,KAhCN,EAgCM;IAhCDH,KAAK,EAAC,MAgCL;IAhCaI,QAAM,yCAAEC,+CAAF;EAgCnB,CAhCN,GACEH,oBA8BM,KA9BN,cA8BM,CA7BJI,iFA6BI,EA5BJC,UA4BI,EApBJL,oBAWM,KAXN,cAWM,CAVJA,oBAQM,KARN,cAQM,CAPJA,oBAKM,KALN,EAKM;IALDF,KAAK,EAAC,gBAKL;IALuB,YAAMQ,oCAAEH,8BAAuBI,MAAvB,CAAF;EAK7B,CALN,GACEP,oBAGM,KAHN,EAGM;IAHDF,KAAK,EAAC,aAGL;IAHmBC,EAAE,EAAC,OAGtB;IAH8BS,eAAe,EAAC,MAG9C;IAHsD,cAAQF,oCAAEG,iBAAYF,MAAZ,CAAF;EAG9D,CAHN,GACEH,4FACGD,eAAK;EAAA;IAFV;;EAAA,EADF;;EAAA,CAOI,CARN,CAUI,CAXN,CAoBI,EAPJO,UAOI,CA9BN,EADF;;EAAA,6BAAqD,OAiCjD,CAlCN","names":["class","id","_createElementVNode","_createElementBlock","onScroll","$setup","_createCommentVNode","_hoisted_3","_cache","$event","contenteditable","_ctx","_hoisted_6"],"sourceRoot":"","sources":["C:\\Users\\tnazu\\OneDrive\\ドキュメント\\coding\\vue3\\mindmap\\src\\components\\MindMap.vue"],"sourcesContent":["<template>\n  <div class=\"\">\n    <div class=\"edge\" @scroll=\"line_reset\" v-dragscroll=\"true\">\n      <div class=\"field\" id=\"field\">\n        <!-- <button class=\"btn\" @click=\"click()\">center</button> -->\n        <div class=\"left\">\n          <div class=\"left_vertical\">\n            <div class=\"left_horizontal\" id=\"left_center\">\n              <div></div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"center\">\n          <div class=\"title_node_rap\">\n            <div class=\"title_selector\" @:click=\"dbclick_title_selector($event)\">\n              <div class=\"title_nodes\" id=\"title\" contenteditable=\"true\" @:keydown=\"input_title($event)\">\n                <!-- @:keydown.tab=\"push_tab($el)\" -->\n                {{ title }}\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n\n        <div class=\"right\">\n          <div class=\"right_vertical\">\n            <div class=\"right_horizontal\" id=\"right_center\">\n              <div></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  onMounted,\n  ref,\n\n} from \"vue\"\nimport { dragscroll } from 'vue-dragscroll'\n\nexport default {\n  name: 'MindMap',\n  props: {\n  },\n  directives: {\n    dragscroll\n  },\n  setup() {\n    let title = ref(\"title\")\n    let nodes = ref([\n      {\n        \"id\": 0,\n        'text': 'ch0',\n        'url': '',\n        'parent': 'title',\n        'direction': ''\n      },\n      {\n        \"id\": 1,\n        'text': 'ch1',\n        'url': '',\n        'parent': 'title',\n        'direction': ''\n      },\n      {\n        \"id\": 2,\n        'text': 'ch2',\n        'url': '',\n        'parent': 0,\n        'direction': ''\n      },\n      {\n        \"id\": 3,\n        'text': 'ch3',\n        'url': '',\n        'parent': 0,\n        'direction': ''\n      },\n      {\n        \"id\": 4,\n        'text': 'ch4',\n        'url': '',\n        'parent': 1,\n        'direction': ''\n      },\n      {\n        \"id\": 5,\n        'text': 'ch5',\n        'url': '',\n        'parent': 1,\n        'direction': ''\n      },\n      {\n        \"id\": 6,\n        'text': 'ch6',\n        'url': '',\n        'parent': 'title',\n        'direction': ''\n      },\n      {\n        \"id\": 7,\n        'text': 'ch7',\n        'url': '',\n        'parent': 'title',\n        'direction': ''\n      },\n      {\n        \"id\": 8,\n        'text': 'ch8',\n        'url': '',\n        'parent': '2',\n        'direction': ''\n      },\n      {\n        \"id\": 9,\n        'text': 'ch9',\n        'url': '',\n        'parent': '2',\n        'direction': ''\n      },\n      {\n        \"id\": 10,\n        'text': 'ch10',\n        'url': '',\n        'parent': '4',\n        'direction': ''\n      },\n      {\n        \"id\": 11,\n        'text': 'ch11',\n        'url': '',\n        'parent': '4',\n        'direction': ''\n      },\n      {\n        \"id\": 12,\n        'text': 'ch12',\n        'url': '',\n        'parent': '5',\n        'direction': ''\n      },\n    ]);\n    let lines = ref([\n\n    ])\n    let count = 0\n    const LeaderLine = window.LeaderLine;\n\n    const makeFromParent = (d, el, node_text, rap_node, node_childes, text) => {\n      node_text.classList.add(\"p_nodes\");\n      rap_node.classList.add(\"rap_node\");\n      // node_childes.classList.add(\"node_childes\");\n      node_childes.id = `${el[\"id\"]}`\n      node_text.id = `${\"node\" + el[\"id\"]}`\n      node_text.appendChild(text)\n\n      count++\n\n      return [rap_node, node_text, node_childes]\n    }\n\n    const makeFromChild = (el, node_text, rap_node, node_childes, text) => {\n      // console.log(\"child\", el)\n      // console.log(el)\n      // console.log(el[\"parent\"])\n\n      const parent = document.getElementById(`${el[\"parent\"]}`)\n      node_text.classList.add(\"c_nodes\");\n      node_childes.id = `${el[\"id\"]}`\n      node_text.id = `${\"node\" + el[\"id\"]}`\n      // node_childes.classList.add(\"node_childes\");\n      node_text.appendChild(text)\n      rap_node.appendChild(node_childes)\n      rap_node.appendChild(node_text)\n      parent.appendChild(rap_node)\n\n      // console.log(nodes.value[el.parent].direction)\n      el.direction = nodes.value[el.parent].direction\n      if (el.direction == 'right') {\n        rap_node.appendChild(node_text)\n        rap_node.appendChild(node_childes)\n        parent.appendChild(rap_node)\n        rap_node.classList.add(\"rap_node\");\n      } else {\n        rap_node.appendChild(node_childes)\n        rap_node.appendChild(node_text)\n        parent.appendChild(rap_node)\n        rap_node.classList.add(\"rap_node_left\");\n      }\n    }\n\n    const makeline = (el, direction, parent) => {\n      let line = new LeaderLine(\n        document.getElementById(parent),\n        LeaderLine.pointAnchor(document.getElementById(`${\"node\" + el[\"id\"]}`), { x: `${direction + \"%\"}`, y: '50%' })\n      );\n      line.path = \"magnet\"\n      line.endPlug = \"behind\"\n      lines.value.push(line)\n    }\n\n    const makelines = () => {\n      const right = 1\n      const left = 99\n\n      nodes.value.forEach(el => {\n        if (el.parent == 'title') {\n          if (el.direction == \"right\") {\n            makeline(el, right, 'title')\n          } else {\n            makeline(el, left, 'title')\n          }\n        } else {\n          if (el.direction == \"right\") {\n            makeline(el, right, `${\"node\" + el[\"parent\"]}`)\n          } else {\n            makeline(el, left, `${\"node\" + el[\"parent\"]}`)\n          }\n\n        }\n      })\n    }\n\n    const removelines = () => {\n      lines.value.forEach(el => {\n        el.remove()\n      })\n      lines.value.length = 0\n    }\n\n    const line_reset = () => {\n      removelines()\n      makelines()\n    }\n\n    const keydown_title = (e) => {\n      // console.log(e.srcElement.innerText)\n      title.value = e.srcElement.innerText\n      console.log(title)\n      line_reset()\n    }\n\n    const dbclick_title_selector = (e) => {\n      console.log(\"dbclick_title_selector\")\n      console.log(e)\n    }\n\n    const keydown_node = (e) => {\n      // console.log('keydown')\n      if (e.key === \"Tab\") {\n        e.preventDefault();\n        // console.log(e.target.id)\n        // console.log(e.srcElement)\n        let id = Number(e.srcElement.id.replace(\"node\", \"\"))\n        let new_node = {\n          \"id\": nodes.value.length,\n          'text': '',\n          'url': '',\n          'parent': id,\n          'direction': nodes.value[id].direction\n        }\n        nodes.value.push(new_node)\n\n        const node_text = document.createElement(\"div\");\n        const rap_node = document.createElement(\"div\");\n        const node_childes = document.createElement(\"div\");\n        const text = document.createTextNode('ch' + new_node.id);\n        node_text.contentEditable = true;\n        makeFromChild(nodes.value[new_node.id], node_text, rap_node, node_childes, text)\n        document.getElementById(`${'node' + new_node['id']}`).addEventListener('keydown', keydown_node);\n        document.getElementById(`${'node' + new_node['id']}`).addEventListener('keyup', keyup_node);\n        document.getElementById(`${'node' + new_node['id']}`).focus();\n      }\n      line_reset()\n    }\n\n    const keyup_node = (e) => {\n      // console.log('keyup')\n      if (e.key === \"Tab\") {\n        e.preventDefault();\n        // console.log(e.key)\n      }\n\n\n      let id = Number(e.srcElement.id.replace(\"node\", \"\"))\n      nodes.value[id].text = e.srcElement.innerText\n      // console.log(nodes.value[id].text)\n\n      line_reset()\n    }\n\n    onMounted(() => {\n      console.log(\"mounted\")\n\n      document.getElementById('title').scrollIntoView({ block: 'center', inline: 'center', })\n\n      const right = document.getElementById(\"right_center\");\n      const left = document.getElementById(\"left_center\");\n\n      nodes.value.forEach(el => {\n        const node_text = document.createElement(\"div\");\n        const rap_node = document.createElement(\"div\");\n        const node_childes = document.createElement(\"div\");\n        const text = document.createTextNode(el[\"text\"]);\n        node_text.contentEditable = true;\n\n        if (el[\"parent\"] == 'title') {\n          console.log()\n          if (count % 2 == 0) {\n            let nodeFromParent = makeFromParent(right, el, node_text, rap_node, node_childes, text)\n\n            nodeFromParent[0].appendChild(nodeFromParent[1])\n            nodeFromParent[0].appendChild(nodeFromParent[2])\n\n            right.appendChild(nodeFromParent[0])\n            el.direction = 'right'\n          } else {\n            let nodeFromParent = makeFromParent(right, el, node_text, rap_node, node_childes, text)\n\n            nodeFromParent[0].appendChild(nodeFromParent[2])\n            nodeFromParent[0].appendChild(nodeFromParent[1])\n\n            left.appendChild(nodeFromParent[0])\n            node_childes.classList.add(\"margin-auto\")\n            el.direction = 'left'\n          }\n        } else {\n          makeFromChild(el, node_text, rap_node, node_childes, text)\n        }\n\n        // console.log(document.getElementById(`${'node' + el['id']}`))\n        document.getElementById(`${'node' + el['id']}`).addEventListener('keydown', keydown_node);\n        document.getElementById(`${'node' + el['id']}`).addEventListener('keyup', keyup_node);\n      });\n\n      console.log(nodes.value)\n\n      makelines()\n    });\n\n    return {\n      title,\n      nodes,\n      lines,\n      line_reset,\n      dbclick_title_selector,\n      keydown_title,\n      keydown_node,\n      keyup_node,\n    };\n\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.btn {\n  z-index: 10000;\n  /* display: flex; */\n}\n\n.edge {\n  width: 900px;\n  height: 900px;\n  overflow: hidden;\n  border: 1px solid #000;\n}\n\n.field {\n  width: 5000px;\n  height: 5000px;\n  /* z-index: 1; */\n  display: flex;\n  position: relative;\n}\n\n.center {\n  width: 10%;\n  height: 100%;\n  /* z-index: 1; */\n  /* background-color: coral; */\n}\n\n.right {\n  width: 45%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.right_vertical {\n  width: 100%;\n  /* background-color: olive; */\n  margin: 0 auto;\n  display: flex;\n  justify-content: flex-start;\n}\n\n.right_horizontal {\n  width: fit-content;\n  /* background-color: orchid; */\n}\n\n.left {\n  width: 45%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.left_vertical {\n  width: 100%;\n  margin: 0 auto;\n  text-align: left;\n  display: flex;\n  justify-content: flex-end;\n  /* background-color: olive; */\n}\n\n.left_horizontal {\n  width: fit-content;\n  /* background-color: orchid; */\n}\n\n.title_node_rap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n}\n\n.title_selector{\n  width: fit-content;\n  height: fit-content;\n  /* width: 100px;\n  height: 100px; */\n  border: 4px solid;\n\n  /* background-color: antiquewhite; */\n  position: relative;\n}\n\n.title_selector:selection{\n  border: 4px solid;\n}\n\n\n.title_nodes {\n  border-radius: 10px;\n  box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5);\n  width: fit-content;\n  font-size: 35px;\n  font-family: sans-serif;\n  padding: 10px 10px;\n  background-color: #F5F5F5;\n  max-width: 200px;\n\n  /* pointer-events: none; */\n  position: relative;\n  z-index:-10\n}\n\n.p_nodes {\n  background-color: #F5F5F5;\n  border-radius: 10px;\n  box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5);\n  /* width: fit-content;\n  height: fit-content; */\n  width: -moz-fit-content;\n  /* Firefox */\n  width: fit-content;\n  /* other browsers */\n  font-size: 23px;\n  padding: 10px 10px;\n  font-family: sans-serif;\n  margin: auto 0\n}\n\n.c_nodes {\n  background-color: #F5F5F5;\n  border-radius: 10px;\n  box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5);\n  /* width: fit-content;\n  height: fit-content; */\n  width: -moz-fit-content;\n  width: fit-content;\n  font-size: 23px;\n  padding: 10px 10px;\n  font-family: sans-serif;\n  margin: 30px 30px;\n}\n\n.rap_node {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  /* height: 100%; */\n}\n\n.rap_node_left {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  /* height: 100%; */\n  /* background-color: yellow; */\n\n}\n\n.node_childes {\n  /* width: 100%;\n  height: 100%; */\n  /* background-color: brown; */\n}\n\n.right_node_childes {\n  width: 100%;\n  height: 100%;\n  background-color: brown;\n  width: -moz-fit-content;\n  /* Firefox */\n  width: fit-content;\n  /* other browsers */\n}\n\n.left_node_childes {\n  width: 100%;\n  height: 100%;\n  width: -moz-fit-content;\n  width: fit-content;\n  margin-right: auto;\n  background-color: forestgreen;\n}\n\n.margin-auto {\n  margin: auto;\n}\n\n#line {\n  position: absolute;\n  left: 100px;\n  top: 100px;\n  width: 200px;\n  height: 1px;\n  background-color: red;\n  transform-origin: left top;\n  transform: skewY(45deg);\n}\n</style>\n  \n"]},"metadata":{},"sourceType":"module"}