{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createElementBlock as _createElementBlock, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"edge\",\n  id: \"edge\"\n};\nconst _hoisted_2 = {\n  class: \"field\",\n  id: \"field\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_vertical\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_horizontal\",\n  id: \"left_center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\")])])], -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"center\"\n};\nconst _hoisted_5 = {\n  class: \"title_node_rap\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"right\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"right_vertical\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"right_horizontal\",\n  id: \"right_center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\")])])], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"line-wrapper\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_dragscroll = _resolveDirective(\"dragscroll\");\n\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" @scroll=\\\"line_reset()\\\" \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" <button class=\\\"btn\\\" @click=\\\"click()\\\">center</button> \"), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" v-on:click=\\\"focus_node($event)\\\" \"), _createCommentVNode(\" v-on:click.self=\\\"click_title_selector($event)\\\" \"), _createElementVNode(\"div\", {\n    class: \"selector\",\n    id: \"selector\",\n    tabindex: \"0\",\n    onClick: _cache[1] || (_cache[1] = $event => $setup.update_focus($event)),\n    onDblclick: _cache[2] || (_cache[2] = $event => $setup.input_node($event)),\n    onKeydown: _cache[3] || (_cache[3] = $event => $setup.move_focus($event))\n  }, [_createCommentVNode(\" @:keydown=\\\"keydown_title($event)\\\" \"), _createElementVNode(\"div\", {\n    class: \"title_nodes\",\n    id: \"title\",\n    contenteditable: \"true\",\n    onBlur: _cache[0] || (_cache[0] = $event => $setup.line_reset())\n  }, [_createCommentVNode(\" @:keydown.tab=\\\"push_tab($el)\\\" \"), _createTextVNode(_toDisplayString($setup.title), 1\n  /* TEXT */\n  )], 32\n  /* HYDRATE_EVENTS */\n  )], 32\n  /* HYDRATE_EVENTS */\n  )])]), _hoisted_6, _hoisted_7])])), [[_directive_dragscroll, true]]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;EAAOC,EAAE,EAAC;;;EAEdD,KAAK,EAAC;EAAQC,EAAE,EAAC;;;gCAEpBC,oBAMM,KANN,EAMM;EANDF,KAAK,EAAC;AAML,CANN,EAAiB,cACfE,oBAIM,KAJN,EAIM;EAJDF,KAAK,EAAC;AAIL,CAJN,EAA0B,cACxBE,oBAEM,KAFN,EAEM;EAFDF,KAAK,EAAC,iBAEL;EAFuBC,EAAE,EAAC;AAE1B,CAFN,gBACEC,oBAAW,KAAX,EADF,CADwB,CAA1B,CADe,CAAjB;;AAAA;;;EAQKF,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;gCAsBbE,oBAMM,KANN,EAMM;EANDF,KAAK,EAAC;AAML,CANN,EAAkB,cAChBE,oBAIM,KAJN,EAIM;EAJDF,KAAK,EAAC;AAIL,CAJN,EAA2B,cACzBE,oBAEM,KAFN,EAEM;EAFDF,KAAK,EAAC,kBAEL;EAFwBC,EAAE,EAAC;AAE3B,CAFN,gBACEC,oBAAW,KAAX,EADF,CADyB,CAA3B,CADgB,CAAlB;;AAAA;;gCAQAA,oBAA6B,KAA7B,EAA6B;EAAxBD,EAAE,EAAC;AAAqB,CAA7B,EAAsB,IAAtB,EAAsB;AAAA;AAAtB;;;;;wCA3CJE,oBA6CM,KA7CN,cA6CM,CA5CJC,iDA4CI,EA3CJF,oBA0CM,KA1CN,cA0CM,CAzCJE,iFAyCI,EAxCJC,UAwCI,EAhCJH,oBAqBM,KArBN,cAqBM,CApBJA,oBAkBM,KAlBN,cAkBM,CAjBJE,0DAiBI,EAdJA,yEAcI,EAZJF,oBAWM,KAXN,EAWM;IAXDF,KAAK,EAAC,UAWL;IAXgBC,EAAE,EAAC,UAWnB;IAX8BK,QAAQ,EAAC,GAWvC;IAVCC,OAAK,sCAAEC,oBAAaC,MAAb,CAAF,CAUN;IATCC,UAAQ,sCAAEF,kBAAWC,MAAX,CAAF,CAST;IARCE,SAAO,sCAAEH,kBAAWC,MAAX,CAAF;EAQR,CAXN,GAKEL,8DAEAF,oBAGM,KAHN,EAGM;IAHDF,KAAK,EAAC,aAGL;IAHmBC,EAAE,EAAC,OAGtB;IAH8BW,eAAe,EAAC,MAG9C;IAHsDC,MAAI,sCAAEL,mBAAF;EAG1D,CAHN,GACEJ,4FACGI,eAAK;EAAA;IAFV;;EAAA,EAPF;;EAAA,CAYI,CAlBN,CAoBI,CArBN,CAgCI,EATJM,UASI,EADJC,UACI,CA1CN,CA2CI,CA7CN,6BAA0C","names":["class","id","_createElementVNode","_createElementBlock","_createCommentVNode","_hoisted_3","tabindex","onClick","$setup","$event","onDblclick","onKeydown","contenteditable","onBlur","_hoisted_6","_hoisted_7"],"sourceRoot":"","sources":["C:\\Users\\tnazu\\OneDrive\\ドキュメント\\coding\\vue3\\mindmap\\src\\components\\MindMap.vue"],"sourcesContent":["<template>\n  <div class=\"edge\" id=\"edge\" v-dragscroll=\"true\">\n    <!-- @scroll=\"line_reset()\" -->\n    <div class=\"field\" id=\"field\">\n      <!-- <button class=\"btn\" @click=\"click()\">center</button> -->\n      <div class=\"left\">\n        <div class=\"left_vertical\">\n          <div class=\"left_horizontal\" id=\"left_center\">\n            <div></div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"center\">\n        <div class=\"title_node_rap\">\n          <!-- v-on:click=\"focus_node($event)\" -->\n\n\n          <!-- v-on:click.self=\"click_title_selector($event)\" -->\n\n          <div class=\"selector\" id=\"selector\" tabindex=\"0\"\n            v-on:click=\"update_focus($event)\"\n            v-on:dblclick=\"input_node($event)\"\n            v-on:keydown=\"move_focus($event)\"\n            >\n            <!-- @:keydown=\"keydown_title($event)\" -->\n\n            <div class=\"title_nodes\" id=\"title\" contenteditable=\"true\" @blur=\"line_reset()\">\n              <!-- @:keydown.tab=\"push_tab($el)\" -->\n              {{ title }}\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"right\">\n        <div class=\"right_vertical\">\n          <div class=\"right_horizontal\" id=\"right_center\">\n            <div></div>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"line-wrapper\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  onMounted,\n  ref,\n} from \"vue\"\nimport { dragscroll } from 'vue-dragscroll'\n\nexport default {\n  name: 'MindMap',\n  props: ['title_props', 'node_props'],\n  directives: {\n    dragscroll\n  },\n  setup(props) {\n    console.log(props.title_props)\n    console.log(props.node_props)\n\n    let title = ref(props.title_props)\n    let nodes = ref(props.node_props)\n    let lines = ref([\n\n    ])\n    let count = 0\n    let focus\n    const LeaderLine = window.LeaderLine;\n    // LeaderLine.positionByWindowResize = false\n\n    const right_append = (rap_node, node_text, node_childes, node_selector) => {\n      node_selector.appendChild(node_text)\n      rap_node.appendChild(node_selector)\n      rap_node.appendChild(node_childes)\n    }\n\n    const left_append = (rap_node, node_text, node_childes, node_selector) => {\n      node_selector.appendChild(node_text)\n      rap_node.appendChild(node_childes)\n      rap_node.appendChild(node_selector)\n    }\n\n    const makeFromParent = (node_text, rap_node, node_childes) => {\n      node_text.classList.add(\"p_nodes\");\n      rap_node.classList.add(\"rap_node\");\n\n      count++\n      return { rap_node, node_text, node_childes }\n    }\n\n    const makeFromChild = (el, node_text, rap_node, node_childes, node_selector) => {\n      const margin_rap_node = document.createElement(\"div\");\n      margin_rap_node.classList.add(\"selector\")\n\n      const parent = document.getElementById(`${el[\"parent\"]}`)\n      node_text.classList.add(\"c_nodes\");\n\n      el.direction = nodes.value[el.parent].direction\n      if (el.direction == 'right') {\n        right_append(rap_node, node_text, node_childes, node_selector)\n        rap_node.classList.add(\"rap_node\");\n      } else {\n        left_append(rap_node, node_text, node_childes, node_selector)\n        rap_node.classList.add(\"rap_node_left\");\n      }\n\n      margin_rap_node.appendChild(rap_node)\n      margin_rap_node.classList.add(\"margin_c_nodes\");\n      parent.appendChild(margin_rap_node)\n      return { rap_node, node_text, node_childes }\n    }\n\n    const makeline = (el, direction, parent) => {\n      direction\n      let line = new LeaderLine(\n        document.getElementById(parent),\n        LeaderLine.pointAnchor(document.getElementById(`${\"node\" + el[\"id\"]}`), { x: `${50 + \"%\"}`, y: '50%' })\n      );\n      // straight\n      line.path = \"magnet\"\n      line.endPlug = \"behind\"\n\n      const elmWrapper = document.getElementById('line-wrapper');\n      const el_line = document.querySelectorAll('.leader-line')\n\n      function position() {\n        elmWrapper.style.transform = 'none';\n        var rectWrapper = elmWrapper.getBoundingClientRect();\n        // Move to the origin of coordinates as the document\n        elmWrapper.style.transform = 'translate(' +\n          ((rectWrapper.left + pageXOffset) * -1) + 'px, ' +\n          ((rectWrapper.top + pageYOffset) * -1) + 'px)';\n        line.position();\n      }\n      elmWrapper.appendChild(el_line[el_line.length - 1]);\n      position()\n      lines.value.push(el_line[el_line.length - 1])\n    }\n\n    const makelines = () => {\n      const right = 1\n      const left = 99\n\n      nodes.value.forEach(el => {\n        if (el.parent == 'title') {\n          if (el.direction == \"right\") {\n            makeline(el, right, 'title')\n          } else {\n            makeline(el, left, 'title')\n          }\n        } else {\n          if (el.direction == \"right\") {\n            makeline(el, right, `${\"node\" + el[\"parent\"]}`)\n          } else {\n            makeline(el, left, `${\"node\" + el[\"parent\"]}`)\n          }\n\n        }\n      })\n    }\n\n    const removelines = () => {\n      lines.value.forEach(el => {\n        el.parentNode.removeChild(el)\n      })\n      lines.value.length = 0\n    }\n\n    const line_reset = () => {\n      removelines()\n      makelines()\n    }\n\n\n\n    const input_node = () => {\n      // console.log(\"dbclick_title_selector\")\n      // console.log(\"$event\", e.srcElement.id)\n      console.log(document.getElementById('title').id)\n      document.getElementById(\"title\").focus();\n      const el = document.getElementById('title');\n      const selection = window.getSelection();\n      const range = document.createRange();\n      selection.removeAllRanges();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      selection.addRange(range);\n      el.focus();\n      return false;\n    }\n\n    const input_node_test = (e) => {\n      console.log('inputnode db', e)\n      console.log(document.getElementById(`node${e}`))\n\n      const target = document.getElementById(`node${e}`)\n\n      target.focus();\n      // const el = document.getElementById('title');\n      const selection = window.getSelection();\n      const range = document.createRange();\n      selection.removeAllRanges();\n      range.selectNodeContents(target);\n      range.collapse(false);\n      selection.addRange(range);\n      target.focus();\n      return false;\n    }\n\n\n    const update_focus = (e) => {\n      if (focus != null) {\n        focus.classList.remove(\"selector_focus\");\n      }\n      e.srcElement.classList.add(\"selector_focus\");\n      focus = null\n      focus = e.srcElement\n    }\n\n\n    const focus_node = () => {\n      // console.log(\"focusfocusfocus\",focus)\n      if (focus) {\n        focus.focus()\n        // childnodeの時ダブルクリックでフォーカスできるようにする\n      }\n    }\n\n     const move_focus = (e) => {\n      if(e.keyCode == 39){\n        if(e.srcElement.id == \"selector\"){\n          nodes.value.forEach(el => {\n            if(el.parent == \"title\" && el.direction == \"right\"){\n              console.log(el)\n              console.log(document.getElementById(el.id))\n            }\n          })\n        }\n      }\n\n\n     }\n\n    onMounted(() => {\n      console.log(\"mounted\")\n\n      const el_title = document.getElementById('title')\n      const el_edge = document.getElementById('edge')\n      const el_selector = document.getElementById('selector')\n\n      el_title.scrollIntoView({ block: 'center', inline: 'center', })\n\n      const right = document.getElementById(\"right_center\");\n      const left = document.getElementById(\"left_center\");\n\n      nodes.value.forEach(el => {\n        const node_text = document.createElement(\"div\");\n\n        const node_selector = document.createElement(\"div\");\n        node_selector.classList.add(\"selector\")\n        node_selector.id = `selector${el[\"id\"]}`\n        node_selector.tabIndex = \"0\";\n\n        const rap_node = document.createElement(\"div\");\n        const node_childes = document.createElement(\"div\");\n        const text = document.createTextNode(el[\"text\"]);\n        node_text.contentEditable = true;\n\n        node_childes.id = `${el[\"id\"]}`\n        node_text.id = `${\"node\" + el[\"id\"]}`\n        node_text.appendChild(text)\n\n        if (el[\"parent\"] == 'title') {\n          console.log()\n          if (count % 2 == 0) {\n            let nodeFromParent = makeFromParent(node_text, rap_node, node_childes)\n            right_append(nodeFromParent.rap_node, nodeFromParent.node_text, nodeFromParent.node_childes, node_selector)\n            right.appendChild(nodeFromParent.rap_node)\n            el.direction = 'right'\n          } else {\n            let nodeFromParent = makeFromParent(node_text, rap_node, node_childes)\n            left_append(nodeFromParent.rap_node, nodeFromParent.node_text, nodeFromParent.node_childes, node_selector)\n            left.appendChild(nodeFromParent.rap_node)\n            node_childes.classList.add(\"margin-left\")\n            el.direction = 'left'\n          }\n        } else {\n          makeFromChild(el, node_text, rap_node, node_childes, node_selector)\n        }\n\n        // 以下イベントの追加\n        const el_node = document.getElementById('node' + el.id)\n        const el_selector = document.getElementById('selector' + el.id)\n\n        el_node.addEventListener('blur', () => {\n          line_reset()\n        });\n\n        el_selector.addEventListener('click', (e) => {\n          update_focus(e)\n        });\n\n        el_selector.addEventListener('dblclick', (e) => {\n          input_node_test(e.srcElement.id.substr(8))\n        })\n\n        el_selector.addEventListener('keydown', (e) => {\n          if ((e.keyCode == 10 || e.keyCode == 13) && e.ctrlKey) {\n            console.log('keydown + ctrl')\n            input_node_test(e.srcElement.id.substr(8))\n          }\n        })\n\n        // 入力中はスクロールを解除する\n        el_node.addEventListener('focus', () => {\n          console.log(\"childnode\")\n          el_edge.removeEventListener('scroll',\n            focus_node\n          )\n        })\n\n        // 解除時のスクロールを戻す\n        el_node.addEventListener('blur', () => {\n          el_edge.addEventListener('scroll', focus_node)\n        })\n\n      });\n\n\n      console.log(nodes.value)\n      makelines()\n\n      // 親要素へのイベントの追加\n      el_selector.addEventListener('keydown', (e) => {\n        if ((e.keyCode == 10 || e.keyCode == 13) && e.ctrlKey) {\n          console.log('keydown + ctrl')\n          input_node(e)\n        }\n      })\n\n      el_edge.addEventListener('scroll', focus_node)\n\n      el_title.addEventListener('focus', () => {\n        console.log(\"focussss\")\n        el_edge.removeEventListener('scroll', focus_node)\n      })\n\n      el_title.addEventListener('blur', () => {\n        el_edge.addEventListener('scroll', focus_node)\n      })\n\n      console.log(el_selector)\n\n    });\n\n    return {\n      title,\n      nodes,\n      lines,\n      line_reset,\n      input_node,\n      update_focus,\n      focus_node,\n      move_focus,\n    };\n\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n#line-wrapper {\n  z-index: -100;\n}\n\n.btn {\n  z-index: 10000;\n  /* display: flex; */\n}\n\n.edge {\n  width: 100vh;\n  height: 100vh;\n  overflow: hidden;\n  /* border: 1px solid #000; */\n}\n\n.field {\n  width: 5000px;\n  height: 5000px;\n  z-index: 1;\n  display: flex;\n  position: relative;\n}\n\n.center {\n  width: 10%;\n  height: 100%;\n  /* z-index: 1; */\n  /* background-color: coral; */\n}\n\n.right {\n  width: 45%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.right_vertical {\n  width: 100%;\n  /* background-color: olive; */\n  margin: 0 auto;\n  display: flex;\n  justify-content: flex-start;\n}\n\n.right_horizontal {\n  width: fit-content;\n  /* background-color: orchid; */\n}\n\n.left {\n  width: 45%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.left_vertical {\n  width: 100%;\n  margin: 0 auto;\n  text-align: left;\n  display: flex;\n  justify-content: flex-end;\n  /* background-color: olive; */\n}\n\n.left_horizontal {\n  width: fit-content;\n  /* background-color: orchid; */\n}\n\n.title_node_rap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n}\n\n.selector {\n  width: fit-content;\n  height: fit-content;\n  border-radius: 10px;\n  /* background-color:#00aaff; */\n  position: relative;\n}\n\n.selector:focus {\n  outline: none;\n}\n\n.title_selector:focus {\n  outline: none;\n}\n\n.title_nodes {\n  background-color: white;\n  border-radius: 10px;\n  /* box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5); */\n\n  width: fit-content;\n\n  font-size: 35px;\n  font-family: sans-serif;\n  padding: 10px 10px;\n  max-width: 200px;\n\n  /* pointer-events: none; */\n  position: relative;\n  z-index: -10;\n}\n\n.title_nodes:focus {\n  outline: none;\n}\n\n.p_nodes {\n  background-color: #F5F5F5;\n  border-radius: 10px;\n  box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5);\n  /* width: fit-content;\n  height: fit-content; */\n  width: -moz-fit-content;\n  /* Firefox */\n  width: fit-content;\n  /* other browsers */\n  font-size: 23px;\n  font-family: sans-serif;\n  padding: 10px 10px;\n  margin: auto 0;\n\n  position: relative;\n  z-index: -10;\n}\n\n.p_nodes:focus {\n  outline: none;\n}\n\n.c_nodes {\n  background-color: #F5F5F5;\n  border-radius: 10px;\n  box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .5);\n  /* width: fit-content;\n  height: fit-content; */\n\n  width: -moz-fit-content;\n  width: fit-content;\n\n  font-size: 23px;\n  font-family: sans-serif;\n\n  padding: 10px 10px;\n  /* margin: 30px 30px; */\n\n  position: relative;\n  z-index: -10;\n}\n\n.c_nodes:focus {\n  outline: none;\n}\n\n.margin_c_nodes{\n  margin: 30px 30px;\n}\n\n.rap_node {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  /* height: 100%; */\n  /* padding: 10px 0px; */\n  /* margin-left: auto;\n  margin-right: 0; */\n\n  /* background-color: aqua; */\n}\n\n.rap_node_left {\n  display: flex;\n  align-items: center;\n  padding: 10px 0px;\n  width: 100%;\n\n  justify-content: flex-end;\n}\n\n.margin-left {\n  /* margin: auto; */\n  margin-left: auto;\n  margin-right: 0;\n}\n\n.selector_focus {\n  border: 4px solid #00aaff;\n  border-radius: 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}